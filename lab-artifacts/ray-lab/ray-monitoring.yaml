apiVersion: v1
kind: ConfigMap
metadata:
  name: ray-monitoring-config
  namespace: $RAY_NAMESPACE
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
    scrape_configs:
    - job_name: 'ray-head'
      static_configs:
      - targets: ['raycluster-ml-head-svc:8080']
    - job_name: 'ray-workers'
      kubernetes_sd_configs:
      - role: pod
        namespaces:
          names:
          - $RAY_NAMESPACE
      relabel_configs:
      - source_labels: [__meta_kubernetes_pod_label_ray_io_cluster]
        action: keep
        regex: raycluster-ml
      - source_labels: [__meta_kubernetes_pod_label_ray_io_node_type]
        action: keep
        regex: worker
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ray-prometheus
  namespace: $RAY_NAMESPACE
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ray-prometheus
  template:
    metadata:
      labels:
        app: ray-prometheus
    spec:
      containers:
      - name: prometheus
        image: prom/prometheus:latest
        ports:
        - containerPort: 9090
        volumeMounts:
        - name: config-volume
          mountPath: /etc/prometheus
        args:
        - '--config.file=/etc/prometheus/prometheus.yml'
        - '--storage.tsdb.path=/prometheus'
        - '--web.console.libraries=/etc/prometheus/console_libraries'
        - '--web.console.templates=/etc/prometheus/consoles'
        - '--web.enable-lifecycle'
      volumes:
      - name: config-volume
        configMap:
          name: ray-monitoring-config
---
apiVersion: v1
kind: Service
metadata:
  name: ray-prometheus-svc
  namespace: $RAY_NAMESPACE
spec:
  selector:
    app: ray-prometheus
  ports:
  - port: 9090
    targetPort: 9090
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ray-grafana
  namespace: $RAY_NAMESPACE
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ray-grafana
  template:
    metadata:
      labels:
        app: ray-grafana
    spec:
      containers:
      - name: grafana
        image: grafana/grafana:latest
        ports:
        - containerPort: 3000
        env:
        - name: GF_SECURITY_ADMIN_PASSWORD
          value: "admin"
        volumeMounts:
        - name: grafana-storage
          mountPath: /var/lib/grafana
      volumes:
      - name: grafana-storage
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: ray-grafana-svc
  namespace: $RAY_NAMESPACE
spec:
  selector:
    app: ray-grafana
  ports:
  - port: 3000
    targetPort: 3000
  type: LoadBalancer
