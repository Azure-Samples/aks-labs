"use strict";(self.webpackChunkdupe_aks_labs=self.webpackChunkdupe_aks_labs||[]).push([[2338],{2152:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>i,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"getting-started-with-k8s-on-aks/getting-started-with-k8s-on-aks","title":"Getting Started with Kubernetes on Azure Kubernetes Service (AKS)","description":"In this workshop, you will learn the basics of Kubernetes and how to package applications for delivery to Azure Kubernetes Service (AKS). The goal of this workshop is to cover as many application implementation details as possible to get you comfortable with hosting your apps on AKS. We will start with a simple application deployment and then progress to more complex scenarios by introducing integrations with other Azure services and open source tooling commonly used within cloud native apps.","source":"@site/docs/getting-started-with-k8s-on-aks/getting-started-with-k8s-on-aks.md","sourceDirName":"getting-started-with-k8s-on-aks","slug":"/getting-started-with-k8s-on-aks/","permalink":"/aks-labs/docs/getting-started-with-k8s-on-aks/","draft":false,"unlisted":false,"editUrl":"https://github.com/Azure-Samples/aks-labs/tree/main/docs/getting-started-with-k8s-on-aks/getting-started-with-k8s-on-aks.md","tags":[],"version":"current","frontMatter":{"title":"Getting Started with Kubernetes on Azure Kubernetes Service (AKS)"},"sidebar":"tutorialSidebar","previous":{"title":"Getting Started with K8s on AKS","permalink":"/aks-labs/docs/category/getting-started-with-k8s-on-aks"},"next":{"title":"AKS Automatic","permalink":"/aks-labs/docs/category/aks-automatic"}}');var a=s(4848),r=s(8453);const i={title:"Getting Started with Kubernetes on Azure Kubernetes Service (AKS)"},o="Getting started",l={},c=[{value:"Objectives",id:"objectives",level:2},{value:"Prerequisites",id:"prerequisites",level:2},{value:"Workshop instructions",id:"workshop-instructions",level:2},{value:"Setting up your environment",id:"setting-up-your-environment",level:2},{value:"Working with <code>kubectl</code>",id:"working-with-kubectl",level:2},{value:"Connecting to your AKS cluster",id:"connecting-to-your-aks-cluster",level:3},{value:"<code>kubectl</code> basics",id:"kubectl-basics",level:3},{value:"Deploying your first app",id:"deploying-your-first-app",level:2},{value:"Getting familiar with Azure Voting App",id:"getting-familiar-with-azure-voting-app",level:2},{value:"Publishing the app to Azure Container Registry",id:"publishing-the-app-to-azure-container-registry",level:2},{value:"Generating YAML manifests",id:"generating-yaml-manifests",level:2},{value:"Configuring apps using environment variables",id:"configuring-apps-using-environment-variables",level:2},{value:"Securing credentials using &quot;Secrets&quot;",id:"securing-credentials-using-secrets",level:2},{value:"Exposing Deployments with Services",id:"exposing-deployments-with-services",level:2},{value:"Dealing with secrets",id:"dealing-with-secrets",level:2},{value:"Securely storing secrets",id:"securely-storing-secrets",level:3},{value:"Using the Azure Key Vault secrets in Kubernetes",id:"using-the-azure-key-vault-secrets-in-kubernetes",level:3},{value:"Creating a ServiceAccount",id:"creating-a-serviceaccount",level:3},{value:"Creating a SecretProviderClass",id:"creating-a-secretproviderclass",level:3},{value:"Updating the database deployment",id:"updating-the-database-deployment",level:3},{value:"Updating the app deployment",id:"updating-the-app-deployment",level:3},{value:"Deploying the updated YAML files",id:"deploying-the-updated-yaml-files",level:3},{value:"Persisting data",id:"persisting-data",level:2},{value:"Creating a PVC for PGDATA",id:"creating-a-pvc-for-pgdata",level:3},{value:"Updating the database manifest to be a StatefulSet and use the PVC",id:"updating-the-database-manifest-to-be-a-statefulset-and-use-the-pvc",level:3},{value:"Sharing your app",id:"sharing-your-app",level:2},{value:"Setting up Istio",id:"setting-up-istio",level:3},{value:"Exposing the app using the Istio Ingress Gateway",id:"exposing-the-app-using-the-istio-ingress-gateway",level:3},{value:"Observing your app",id:"observing-your-app",level:2},{value:"Azure Container Insights",id:"azure-container-insights",level:3},{value:"Prometheus and Grafana",id:"prometheus-and-grafana",level:3},{value:"Scaling your app",id:"scaling-your-app",level:2},{value:"Setting request and limits",id:"setting-request-and-limits",level:3},{value:"Scaling with KEDA based on CPU utilization",id:"scaling-with-keda-based-on-cpu-utilization",level:3},{value:"Load testing your app",id:"load-testing-your-app",level:3},{value:"Summary",id:"summary",level:2}];function d(e){const n={a:"a",blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components},{Details:t}=n;return t||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"getting-started",children:"Getting started"})}),"\n",(0,a.jsx)(n.p,{children:"In this workshop, you will learn the basics of Kubernetes and how to package applications for delivery to Azure Kubernetes Service (AKS). The goal of this workshop is to cover as many application implementation details as possible to get you comfortable with hosting your apps on AKS. We will start with a simple application deployment and then progress to more complex scenarios by introducing integrations with other Azure services and open source tooling commonly used within cloud native apps."}),"\n",(0,a.jsx)(n.h2,{id:"objectives",children:"Objectives"}),"\n",(0,a.jsx)(n.p,{children:"The objectives of this workshop are to:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["Introduce you to the basics of Kubernetes and ",(0,a.jsx)(n.code,{children:"kubectl"})]}),"\n",(0,a.jsx)(n.li,{children:"Deploy an application to Azure Kubernetes Service"}),"\n",(0,a.jsx)(n.li,{children:"Securing application secrets using Azure Key Vault"}),"\n",(0,a.jsx)(n.li,{children:"Persisting application data using Azure Disk Storage"}),"\n",(0,a.jsx)(n.li,{children:"Exposing applications using the Istio Ingress Gateway"}),"\n",(0,a.jsx)(n.li,{children:"Monitoring applications using Azure Monitor and the Prometheus/Grafana stack"}),"\n",(0,a.jsx)(n.li,{children:"Scaling applications using KEDA"}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,a.jsx)("div",{class:"info","data-title":"Info",children:(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsx)(n.p,{children:"This workshop was originally delivered in-person at Microsoft Build 2023 and a pre-configured lab environment was available for all attendees."}),"\n"]})}),"\n",(0,a.jsx)(n.p,{children:"The lab environment was pre-configured with the following:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"https://azure.microsoft.com/free",children:"Azure Subscription"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"https://learn.microsoft.com/cli/azure/what-is-azure-cli?WT.mc_id=containers-105184-pauyu",children:"Azure CLI"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"https://code.visualstudio.com/",children:"Visual Studio Code"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"https://www.docker.com/products/docker-desktop/",children:"Docker Desktop"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"https://git-scm.com/",children:"Git"})}),"\n",(0,a.jsxs)(n.li,{children:["Bash shell (e.g. ",(0,a.jsx)(n.a,{href:"https://www.microsoft.com/p/windows-terminal/9n0dx20hk701",children:"Windows Terminal"})," with ",(0,a.jsx)(n.a,{href:"https://docs.microsoft.com/windows/wsl/install-win10",children:"WSL"})," or ",(0,a.jsx)(n.a,{href:"https://shell.azure.com",children:"Azure Cloud Shell"}),")"]}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"workshop-instructions",children:"Workshop instructions"}),"\n",(0,a.jsx)(n.p,{children:"When you see these blocks of text, you should follow the instructions below."}),"\n",(0,a.jsx)("div",{class:"task","data-title":"Task",children:(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsx)(n.p,{children:"This means you need to perform a task."}),"\n"]})}),"\n",(0,a.jsx)("div",{class:"info","data-title":"Info",children:(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsx)(n.p,{children:"This means there's some additional context."}),"\n"]})}),"\n",(0,a.jsx)("div",{class:"tip","data-title":"Tip",children:(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsx)(n.p,{children:"This means you should pay attention to some helpful tips."}),"\n"]})}),"\n",(0,a.jsx)("div",{class:"warning","data-title":"Warning",children:(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsx)(n.p,{children:"This means you should pay attention to some information."}),"\n"]})}),"\n",(0,a.jsx)("div",{class:"important","data-title":"Important",children:(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:["This means you should ",(0,a.jsx)(n.strong,{children:(0,a.jsx)(n.em,{children:"really"})})," pay attention to some information."]}),"\n"]})}),"\n",(0,a.jsx)(n.h2,{id:"setting-up-your-environment",children:"Setting up your environment"}),"\n",(0,a.jsx)(n.p,{children:"To setup your own lab environment, you will need to run a Terraform script to provision the necessary resources in your Azure subscription. The steps below will walk you through the process."}),"\n",(0,a.jsx)("div",{class:"important","data-title":"Important",children:(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:["Before you proceed, please ensure you have access to an Azure subscription with the ability to create resources and users in Azure Active Directory. If you do not have access to an Azure subscription, you can sign up for a ",(0,a.jsx)(n.a,{href:"https://azure.microsoft.com/free",children:"free account"}),"."]}),"\n"]})}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:["Using a web browser, navigate to the ",(0,a.jsx)(n.a,{href:"https://shell.azure.com",children:"Azure Cloud Shell"})]}),"\n",(0,a.jsx)(n.li,{children:"Ensure your Cloud Shell is set to Bash. If it is on PowerShell, click the drop down in the top left corner and select Bash."}),"\n",(0,a.jsx)(n.li,{children:"Run the following commands to ensure you have all the necessary providers registered in your subscription."}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"az provider register --namespace Microsoft.Quota\naz provider register --namespace Microsoft.Compute\naz provider register --namespace Microsoft.ContainerRegistry\naz provider register --namespace Microsoft.ContainerService\naz provider register --namespace Microsoft.Network\naz provider register --namespace Microsoft.ApiManagement\naz provider register --namespace Microsoft.Monitor\naz provider register --namespace Microsoft.AlertsManagement\naz provider register --namespace Microsoft.Dashboard\naz provider register --namespace Microsoft.App\n"})}),"\n",(0,a.jsxs)(n.ol,{start:"4",children:["\n",(0,a.jsx)(n.li,{children:"Run the following commands to ensure you have all the necessary features registered in your subscription."}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'az feature register --namespace "Microsoft.ContainerService" --name "EnableWorkloadIdentityPreview"\naz feature register --namespace "Microsoft.ContainerService" --name "AKS-GitOps"\naz feature register --namespace "Microsoft.ContainerService" --name "AzureServiceMeshPreview"\naz feature register --namespace "Microsoft.ContainerService" --name "AKS-KedaPreview"\naz feature register --namespace "Microsoft.ContainerService" --name "AKS-PrometheusAddonPreview"\n'})}),"\n",(0,a.jsxs)(n.ol,{start:"5",children:["\n",(0,a.jsxs)(n.li,{children:["Clone this repo: ",(0,a.jsx)(n.a,{href:"https://github.com/pauldotyu/awesome-aks",children:"https://github.com/pauldotyu/awesome-aks"})]}),"\n",(0,a.jsxs)(n.li,{children:["Using your terminal, open the repo and navigate to the ",(0,a.jsx)(n.strong,{children:"2023-05-23-msbuild-preday-aks-workshop"})," directory"]}),"\n",(0,a.jsxs)(n.li,{children:["Run the following command to create a ",(0,a.jsx)(n.strong,{children:"terraform.tfvars"})," file and populate it with the following content."]}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-terraform",children:'cat <<EOF > terraform.tfvars\ndeployment_locations = [\n  {\n    offset   = 0 # adjust this to the number of deployments that have already been created in the previous set\n    count    = 1 # adjust this to the number of deployments you want to create\n    location = "eastus"\n    vm_sku   = "Standard_D4s_v4"\n  }\n]\nEOF\n'})}),"\n",(0,a.jsxs)(n.ol,{start:"8",children:["\n",(0,a.jsxs)(n.li,{children:["Run the ",(0,a.jsx)(n.code,{children:"terraform init"})," command"]}),"\n",(0,a.jsxs)(n.li,{children:["Run the ",(0,a.jsx)(n.code,{children:"terraform apply"})," command and confirm the deployment when prompted"]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"In 10-15 minutes, your lab environment should be ready to go."}),"\n",(0,a.jsxs)(n.p,{children:["If you run the ",(0,a.jsx)(n.code,{children:"terraform output"})," command, you should see your username, password, AKS cluster name and resource group name."]}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h1,{id:"kubernetes-fundamentals",children:"Kubernetes fundamentals"}),"\n",(0,a.jsxs)(n.p,{children:["This section of the workshop will introduce you to the basics of Kubernetes. We'll be using ",(0,a.jsx)(n.a,{href:"https://azure.microsoft.com/products/kubernetes-service",children:"Azure Kubernetes Service (AKS)"})," to deploy and manage an ",(0,a.jsx)(n.a,{href:"https://github.com/Azure-Samples/azure-voting-app-rust",children:"Azure Voting App"}),"."]}),"\n",(0,a.jsxs)(n.h2,{id:"working-with-kubectl",children:["Working with ",(0,a.jsx)(n.code,{children:"kubectl"})]}),"\n",(0,a.jsxs)(n.p,{children:["Kubernetes administrators will commonly interact with the Kubernetes API server using the ",(0,a.jsxs)(n.a,{href:"https://kubernetes.io/docs/reference/kubectl/",children:[(0,a.jsx)(n.code,{children:"kubectl"})," command line tool"]}),". As you progress through your cloud native journey, you will find that there are other tools available for deploying, managing, and monitoring Kubernetes clusters. However, basic knowledge of ",(0,a.jsx)(n.code,{children:"kubectl"})," is essential."]}),"\n",(0,a.jsx)(n.h3,{id:"connecting-to-your-aks-cluster",children:"Connecting to your AKS cluster"}),"\n",(0,a.jsx)(n.p,{children:"An AKS cluster has been provisioned for you. Let's use the Azure CLI to download the credentials for the cluster."}),"\n",(0,a.jsx)("div",{class:"task","data-title":"Task",children:(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:["Run the following command to set variables for your resource group and AKS cluster name. Don't forget to replace ",(0,a.jsx)(n.code,{children:"<user-number>"})," in the command below with the username you've been assigned."]}),"\n"]})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"RG_NAME=rg-user<user-number>\nAKS_NAME=aks-user<user-number>\n"})}),"\n",(0,a.jsx)("div",{class:"task","data-title":"Task",children:(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsx)(n.p,{children:"Run the following command to download the credentials for your AKS cluster."}),"\n"]})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"az aks get-credentials --resource-group $RG_NAME --name $AKS_NAME\n"})}),"\n",(0,a.jsxs)(n.p,{children:["The command above will download the credentials for the cluster and store them in ",(0,a.jsx)(n.code,{children:"~/.kube/config"}),". This file includes cluster certificate information and is used by ",(0,a.jsx)(n.code,{children:"kubectl"})," to connect to the cluster. Since it does contain certificate information, it should be treated as a secret."]}),"\n",(0,a.jsxs)(n.h3,{id:"kubectl-basics",children:[(0,a.jsx)(n.code,{children:"kubectl"})," basics"]}),"\n",(0,a.jsx)("div",{class:"task","data-title":"Task",children:(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsx)(n.p,{children:"To get some basic information about your cluster, run the following command:"}),"\n"]})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"kubectl cluster-info\n"})}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:"kubectl"})," tool allows to you to interact with a variety of Kubernetes clusters."]}),"\n",(0,a.jsx)("div",{class:"tip","data-title":"Tip",children:(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsx)(n.p,{children:"You can see the list of clusters you have access to by running the following command:"}),"\n"]})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"kubectl config get-contexts\n"})}),"\n",(0,a.jsx)("div",{class:"tip","data-title":"Tip",children:(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsx)(n.p,{children:"If you have more than one context listed, you can switch between clusters by running the following command:"}),"\n"]})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"kubectl config use-context <context-name>\n"})}),"\n",(0,a.jsx)("div",{class:"tip","data-title":"Tip",children:(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:["Be sure to checkout the ",(0,a.jsxs)(n.a,{href:"https://kubernetes.io/docs/reference/kubectl/cheatsheet/",children:[(0,a.jsx)(n.code,{children:"kubectl"})," Cheat Sheet"]})," for a list of common commands and instructions on configuring your ",(0,a.jsx)(n.code,{children:"kubectl"})," with and alias and enabling autocomplete."]}),"\n"]})}),"\n",(0,a.jsx)(n.h2,{id:"deploying-your-first-app",children:"Deploying your first app"}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:"kubectl"})," tool allows you to interact with the Kubernetes API server imperatively or declaratively. When you use the imperative approach, you are telling Kubernetes what to do. When you use the declarative approach, you are telling Kubernetes what you want."]}),"\n",(0,a.jsx)("div",{class:"task","data-title":"Task",children:(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsx)(n.p,{children:"Let's deploy our first app to Kubernetes using the imperative approach."}),"\n"]})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"kubectl run nginx --image nginx\n"})}),"\n",(0,a.jsxs)(n.p,{children:["Here, we are telling Kubernetes to run a new Pod named ",(0,a.jsx)(n.code,{children:"nginx"})," using the ",(0,a.jsx)(n.code,{children:"nginx"})," image."]}),"\n",(0,a.jsxs)(n.p,{children:["A Pod is the smallest unit of deployment in Kubernetes. It is a group of one or more containers that share the same network and storage. In this case, we are running a single container using the ",(0,a.jsx)(n.code,{children:"nginx"})," image."]}),"\n",(0,a.jsx)("div",{class:"info","data-title":"Info",children:(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:["When you run multiple containers in a Pod, this is known as a ",(0,a.jsx)(n.a,{href:"https://docs.microsoft.com/azure/architecture/patterns/sidecar",children:"sidecar pattern"}),"."]}),"\n"]})}),"\n",(0,a.jsx)("div",{class:"task","data-title":"Task",children:(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsx)(n.p,{children:"Let's see if our Pod is running."}),"\n"]})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"kubectl get pods\n"})}),"\n",(0,a.jsxs)(t,{children:[(0,a.jsx)("summary",{children:"Click to expand output"}),(0,a.jsx)(n.p,{children:"You should see something like this:"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-text",children:"NAME    READY   STATUS    RESTARTS   AGE\nnginx   1/1     Running   0          7s\n"})})]}),"\n",(0,a.jsx)("div",{class:"task","data-title":"Task",children:(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsx)(n.p,{children:"We can also get more information about our Pod by running the following command:"}),"\n"]})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"kubectl describe pod nginx\n"})}),"\n",(0,a.jsx)(n.p,{children:"This command will give us a lot of information about our Pod including the events that have occurred."}),"\n",(0,a.jsx)("div",{class:"task","data-title":"Task",children:(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsx)(n.p,{children:"To view container logs, run the following command:"}),"\n"]})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"kubectl logs nginx\n"})}),"\n",(0,a.jsx)(n.p,{children:"Now, let's take a look at how we can deploy our app using a declarative approach."}),"\n",(0,a.jsx)("div",{class:"task","data-title":"Task",children:(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsx)(n.p,{children:"Let's create a YAML manifest that describes our Pod."}),"\n"]})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"cat <<EOF > nginx2.yaml\napiVersion: v1\nkind: Pod\nmetadata:\n  name: nginx2\nspec:\n  containers:\n  - name: nginx2\n    image: nginx\n    resources: {}\nEOF\n"})}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.a,{href:"https://yaml.org/",children:"YAML"}),' is a human-readable data serialization language. It is commonly used for configuration files and in applications where data is being stored or transmitted. YAML is short for "YAML Ain\'t Markup Language".']}),"\n",(0,a.jsx)("div",{class:"task","data-title":"Task",children:(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsx)(n.p,{children:"Next, let's deploy our Pod using the YAML manifest we just created. Don't worry if you don't understand the YAML file. We'll be covering that in more detail later."}),"\n"]})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"kubectl apply -f nginx2.yaml\n"})}),"\n",(0,a.jsx)("div",{class:"task","data-title":"Task",children:(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsx)(n.p,{children:"Let's see if our Pod is running."}),"\n"]})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"kubectl get pods\n"})}),"\n",(0,a.jsxs)(t,{children:[(0,a.jsx)("summary",{children:"Click to expand output"}),(0,a.jsx)(n.p,{children:"You should see something like this:"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-text",children:"NAME     READY   STATUS    RESTARTS   AGE\nnginx    1/1     Running   0          7m49s\nnginx2   1/1     Running   0          3s\n"})})]}),"\n",(0,a.jsxs)(n.p,{children:["Here, we are telling Kubernetes that we want a Pod named ",(0,a.jsx)(n.code,{children:"nginx2"})," using the ",(0,a.jsx)(n.code,{children:"nginx"})," image."]}),"\n",(0,a.jsxs)(n.p,{children:["This is different from the imperative approach where we told Kubernetes to run a Pod named ",(0,a.jsx)(n.code,{children:"nginx"})," using the ",(0,a.jsx)(n.code,{children:"nginx"})," image. The declarative approach is preferred because it allows us to check our code into source control and track changes over time."]}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:"kubectl apply"})," command is idempotent. This means that if you run the command multiple times, the result will be the same. If the resource already exists, it will be updated. If the resource does not exist, it will be created."]}),"\n",(0,a.jsx)("div",{class:"important","data-title":"Important",children:(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsx)(n.p,{children:"Before we move on, be sure to delete all pods so that we don't waste cluster resources."}),"\n"]})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"kubectl delete pods --all\n"})}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h1,{id:"deploying-to-aks",children:"Deploying to AKS"}),"\n",(0,a.jsx)(n.p,{children:'We\'ll be deploying the Azure Voting App to Azure Kubernetes Service (AKS). This is a simple web app that lets you vote for things and displays the vote totals. You may recognize this app from Microsoft Docs which allows you to vote for "Dogs" or "Cats". The example we\'ll be using is a slightly different in that it\'s been modified to allow you to vote for any two things you want based on the environment variables you set.'}),"\n",(0,a.jsxs)(n.p,{children:["The repo can be found here: ",(0,a.jsx)(n.a,{href:"https://github.com/Azure-Samples/azure-voting-app-rust",children:"Azure-Samples/azure-voting-app-rust"}),"."]}),"\n",(0,a.jsx)(n.p,{children:"Also, you may have guessed by the repo name, this version of the app has been re-written in Rust \ud83e\udd80"}),"\n",(0,a.jsx)(n.h2,{id:"getting-familiar-with-azure-voting-app",children:"Getting familiar with Azure Voting App"}),"\n",(0,a.jsx)(n.p,{children:"This app uses PostgreSQL as the backend database. We'll be using Docker to package the app into a container image so that it can be deployed to AKS."}),"\n",(0,a.jsx)("div",{class:"info","data-title":"Info",children:(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsx)(n.p,{children:"If you have access to GitHub Codespaces, it is recommended that you open the repo in a Codespace and skip the next step of forking/cloning the repo and opening in a VS Code Dev Container.."}),"\n"]})}),"\n",(0,a.jsx)("div",{class:"task","data-title":"Task",children:(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:["Start off by forking, then cloning the repo to your local machine. When the repo has been cloned, open it up in VS Code, install the ",(0,a.jsx)(n.a,{href:"https://marketplace.visualstudio.com/items?itemName=ms-vscode-remote.remote-containers",children:"Dev Container extension"}),', and click the "Reopen in Container" button. This will take a few minutes to complete.']}),"\n"]})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"Fork and clone repo",src:s(391).A+"",width:"1440",height:"1055"})}),"\n",(0,a.jsx)("div",{class:"task","data-title":"Task",children:(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsx)(n.p,{children:"Before we deploy the app to AKS, let's build and run it locally to make sure everything is working as expected."}),"\n"]})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"cargo run\n"})}),"\n",(0,a.jsx)("div",{class:"warning","data-title":"Warning",children:(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsx)(n.p,{children:"This command will take a few minutes to complete and subsequent runs will be much faster."}),"\n"]})}),"\n",(0,a.jsxs)(n.p,{children:["Once the app is running, you should be able to access it at ",(0,a.jsx)(n.a,{href:"http://localhost:8080",children:"http://localhost:8080"}),"."]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"Azure Voting App",src:s(2914).A+"",width:"1440",height:"1055"})}),"\n",(0,a.jsxs)(n.p,{children:["If you look at the ",(0,a.jsx)(n.strong,{children:"docker-compose.yml"})," file that is in the root of the repo, you'll see that the app is made up of two services: ",(0,a.jsx)(n.code,{children:"app"})," and ",(0,a.jsx)(n.code,{children:"db"}),"."]}),"\n",(0,a.jsxs)(n.p,{children:["As the names suggest, the ",(0,a.jsx)(n.code,{children:"app"})," service is the web front-end and the ",(0,a.jsx)(n.code,{children:"db"})," service is the database."]}),"\n",(0,a.jsxs)(n.p,{children:["In the ",(0,a.jsx)(n.code,{children:"app"})," service, you'll see that there are two environment variables defined: ",(0,a.jsx)(n.code,{children:"FIRST_VALUE"})," and ",(0,a.jsx)(n.code,{children:"SECOND_VALUE"}),". These are the options that will be displayed on the voting page."]}),"\n",(0,a.jsxs)(n.p,{children:["Before we move on, let's stop the app by pressing ",(0,a.jsx)(n.code,{children:"Ctrl+C"})," in the terminal then run the following commands to re-authenticate to Azure from inside this Dev Container's terminal and connect to our AKS cluster."]}),"\n",(0,a.jsx)("div",{class:"important","data-title":"Important",children:(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsx)(n.p,{children:"If you are in a new DevContainer or Codespace, run the following command to login to Azure."}),"\n"]})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"az login\n"})}),"\n",(0,a.jsx)("div",{class:"task","data-title":"Task",children:(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:["Run the following command to set variables for your resource group and AKS cluster name and don't forget to replace ",(0,a.jsx)(n.code,{children:"<user-number>"})," in the command below with the username you've been assigned."]}),"\n"]})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"RG_NAME=rg-user<user-number>\nAKS_NAME=aks-user<user-number>\n"})}),"\n",(0,a.jsx)("div",{class:"task","data-title":"Task",children:(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsx)(n.p,{children:"Run the following command to download the credentials for your AKS cluster."}),"\n"]})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"az aks get-credentials --resource-group $RG_NAME --name $AKS_NAME\n"})}),"\n",(0,a.jsx)(n.h2,{id:"publishing-the-app-to-azure-container-registry",children:"Publishing the app to Azure Container Registry"}),"\n",(0,a.jsxs)(n.p,{children:["Before you can deploy our app to Kubernetes, you need to package the container image and push it to a container registry. You'll be using ",(0,a.jsx)(n.a,{href:"https://azure.microsoft.com/products/container-registry",children:"Azure Container Registry (ACR)"})," for this."]}),"\n",(0,a.jsxs)(n.p,{children:["There are a few different ways to push an image to ACR. We'll be using the ",(0,a.jsx)(n.code,{children:"az acr build"})," command which will use ",(0,a.jsx)(n.a,{href:"https://learn.microsoft.com/azure/container-registry/container-registry-tasks-overview?WT.mc_id=containers-105184-pauyu",children:"ACR Tasks"})," to build the image and push it to ACR."]}),"\n",(0,a.jsx)("div",{class:"task","data-title":"Task",children:(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsx)(n.p,{children:"Let's start by getting the name of your ACR instance."}),"\n"]})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'ACR_NAME=$(az resource list \\\n  --resource-group $RG_NAME \\\n  --resource-type Microsoft.ContainerRegistry/registries \\\n  --query "[0].name" \\\n  --output tsv)\n'})}),"\n",(0,a.jsx)("div",{class:"task","data-title":"Task",children:(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsx)(n.p,{children:"Make sure you are at the root of your repository then run the following command to build and push the image to ACR."}),"\n"]})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"az acr build \\\n  --registry $ACR_NAME \\\n  --image azure-voting-app:latest \\\n  --file Dockerfile .\n"})}),"\n",(0,a.jsx)("div",{class:"important","data-title":"Important",children:(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsx)(n.p,{children:"This command will take a few minutes to complete. Let's move on to the next step while it's running."}),"\n"]})}),"\n",(0,a.jsx)(n.h2,{id:"generating-yaml-manifests",children:"Generating YAML manifests"}),"\n",(0,a.jsx)(n.p,{children:"Earlier, we learned that Kubernetes uses YAML manifests to describe the state of your cluster."}),"\n",(0,a.jsxs)(n.p,{children:["In the previous section, we used ",(0,a.jsx)(n.code,{children:"kubectl"})," to run a pod using both the imperative and declarative approaches."]}),"\n",(0,a.jsxs)(n.p,{children:["But, did you know that ",(0,a.jsx)(n.code,{children:"kubectl"})," can also be used to generate YAML manifests for you? Let's take a look at how we can do that to generate a YAML file for our app."]}),"\n",(0,a.jsx)("div",{class:"important","data-title":"Important",children:(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:["Open a new terminal and make sure you are at the root of the repo then run the following command set variables for your resource group and AKS cluster names. Be sure to replace ",(0,a.jsx)(n.code,{children:"<user-number>"})," with your assigned user number."]}),"\n"]})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"RG_NAME=rg-user<user-number>\nAKS_NAME=aks-user<user-number>\n"})}),"\n",(0,a.jsx)("div",{class:"task","data-title":"Task",children:(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsx)(n.p,{children:"Run the following command to generate to get the name of your ACR."}),"\n"]})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'ACR_NAME=$(az resource list \\\n  --resource-group $RG_NAME \\\n  --resource-type Microsoft.ContainerRegistry/registries \\\n  --query "[0].name" \\\n  --output tsv)\n'})}),"\n",(0,a.jsx)("div",{class:"task","data-title":"Task",children:(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsx)(n.p,{children:"Run the following command to create a new directory and navigate into it."}),"\n"]})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"mkdir pre03\ncd pre03\n"})}),"\n",(0,a.jsx)("div",{class:"task","data-title":"Task",children:(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:["Run the following command to generate a YAML manifest using ",(0,a.jsx)(n.code,{children:"kubectl"}),"."]}),"\n"]})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"kubectl create deploy azure-voting-app \\\n  --image $ACR_NAME.azurecr.io/azure-voting-app:latest \\\n  --port=8080 \\\n  --dry-run=client \\\n  --output yaml > azure-voting-app-deployment.yaml\n"})}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:"--dry-run=client"})," flag combined with the ",(0,a.jsx)(n.code,{children:"--output yaml"})," flag tells ",(0,a.jsx)(n.code,{children:"kubectl"})," to generate the YAML file but not actually run the command."]}),"\n",(0,a.jsx)(n.p,{children:"This is useful because it allows us to see what the YAML file will look like before we actually run it. By redirecting the output to a file, we can save the YAML file to disk."}),"\n",(0,a.jsx)(n.p,{children:"If you open up the YAML file, you'll see that most of the details have been filled in for you \ud83e\udd73"}),"\n",(0,a.jsx)("div",{class:"info","data-title":"Info",children:(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:["Did you notice that we are creating a ",(0,a.jsx)(n.strong,{children:"Deployment"})," resource instead of a ",(0,a.jsx)(n.strong,{children:"Pod"})," resource? This is because we want to scale our app up and down. If we were to use a ",(0,a.jsx)(n.strong,{children:"Pod"})," resource, we can only run a single instance of our app. With a ",(0,a.jsx)(n.strong,{children:"Deployment"})," resource, we can run multiple instances of our app and Kubernetes will automatically restart them if they fail."]}),"\n"]})}),"\n",(0,a.jsx)(n.h2,{id:"configuring-apps-using-environment-variables",children:"Configuring apps using environment variables"}),"\n",(0,a.jsx)(n.p,{children:"The base YAML file that was generated for us is a good starting point, but we need to make a few changes to it before we can deploy it to AKS. The first thing we need to do is add the environment variables to configure the app."}),"\n",(0,a.jsxs)(n.p,{children:["But wait, we don't know where exactly to put the environment variables in the YAML file. Never fear, ",(0,a.jsx)(n.code,{children:"kubectl"})," is here!"]}),"\n",(0,a.jsx)("div",{class:"task","data-title":"Task",children:(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:["Run the following ",(0,a.jsx)(n.code,{children:"kubectl explain"})," command to get more information about Deployments."]}),"\n"]})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"kubectl explain deploy.spec.template.spec.containers\n"})}),"\n",(0,a.jsxs)(n.p,{children:["Here, we are using ",(0,a.jsx)(n.code,{children:"kubectl explain"})," to get information about the Deployment resource. We are then drilling down into the ",(0,a.jsx)(n.code,{children:"spec.template.spec.containers"})," section to get information about the ",(0,a.jsx)(n.code,{children:"containers"})," property."]}),"\n",(0,a.jsx)("div",{class:"info","data-title":"Info",children:(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:["You can traverse the through all the Deployment properties in this way to get more information about them. Additionally, you can also use ",(0,a.jsx)(n.code,{children:"kubectl explain"})," to get more information about other Kubernetes resources."]}),"\n",(0,a.jsx)(n.p,{children:"To see a list of all resources that can be explained, run the following command:"}),"\n"]})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"kubectl api-resources\n"})}),"\n",(0,a.jsx)("div",{class:"task","data-title":"Task",children:(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:["We can see that the ",(0,a.jsx)(n.code,{children:"containers"})," object has a ",(0,a.jsx)(n.code,{children:"env"})," property which is an array of environment variables. If we dig a little deeper, we can see how to define environment variables."]}),"\n"]})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"kubectl explain deploy.spec.template.spec.containers.env\n"})}),"\n",(0,a.jsx)("div",{class:"task","data-title":"Task",children:(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:["Now that we know where to put the environment variables, let's add them to the YAML file. Open the ",(0,a.jsx)(n.code,{children:"azure-voting-app-deployment.yaml"})," file, place your cursor after the ",(0,a.jsx)(n.code,{children:"resource: {}"})," line, and add the following block of code."]}),"\n"]})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'env:\n  - name: FIRST_VALUE\n    value: "Dogs"\n  - name: SECOND_VALUE\n    value: "Cats"\n'})}),"\n",(0,a.jsx)("div",{class:"important","data-title":"Important",children:(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsx)(n.p,{children:"YAML is very sensitive to indentation. Make sure you indent the environment variables exactly as its shown above. The resulting YAML file should look like this:"}),"\n"]})}),"\n",(0,a.jsxs)(t,{children:[(0,a.jsx)("summary",{children:"Click to expand output"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  creationTimestamp: null\n  labels:\n    app: azure-voting-app\n  name: azure-voting-app\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: azure-voting-app\n  strategy: {}\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: azure-voting-app\n    spec:\n      containers:\n        - image: <REPLACE_THIS_WITH_YOUR_ACR_NAME>.azurecr.io/azure-voting-app:latest\n          name: azure-voting-app\n          resources: {}\n          env:\n            - name: FIRST_VALUE\n              value: "Dogs"\n            - name: SECOND_VALUE\n              value: "Cats"\n            - name: DATABASE_SERVER\n              value: azure-voting-db\n            - name: DATABASE_PASSWORD\n              valueFrom:\n                secretKeyRef:\n                  name: azure-voting-db-secrets\n                  key: password\nstatus: {}\n'})})]}),"\n",(0,a.jsx)(n.h2,{id:"securing-credentials-using-secrets",children:'Securing credentials using "Secrets"'}),"\n",(0,a.jsxs)(n.p,{children:["We also need database credentials to be able to connect to the database. We could add them to the YAML file, but that would mean that they would be stored in plain text. This is not a good idea because anyone who has access to the YAML file would be able to see the credentials. Instead, we are going to use a ",(0,a.jsx)(n.a,{href:"https://kubernetes.io/docs/concepts/configuration/secret/",children:"Kubernetes secret"})," to store the credentials in the cluster."]}),"\n",(0,a.jsx)("div",{class:"task","data-title":"Task",children:(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsx)(n.p,{children:"Run the following command to create a secret with two keys to store the database username and password."}),"\n"]})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"kubectl create secret generic azure-voting-db-secrets \\\n  --from-literal=username=postgres \\\n  --from-literal=password=mypassword\n"})}),"\n",(0,a.jsxs)(n.p,{children:["Now that we have created the secret, we need to tell Kubernetes to use it. We can do this by adding a few more environment variables to the ",(0,a.jsx)(n.code,{children:"containers"})," object."]}),"\n",(0,a.jsxs)(n.p,{children:['But, instead of directly keying in the value as we did with "Dogs" and "Cats" above, we can use the ',(0,a.jsx)(n.code,{children:"valueFrom"})," property to point to our Kubernetes secret.."]}),"\n",(0,a.jsx)("div",{class:"task","data-title":"Task",children:(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:["In the ",(0,a.jsx)(n.code,{children:"azure-voting-app-deployment.yaml"})," file, add the following YAML to the YAML file directly below the ",(0,a.jsx)(n.code,{children:"SECOND_VALUE"})," environment variable."]}),"\n"]})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"- name: DATABASE_SERVER\n  value: azure-voting-db\n- name: DATABASE_USER\n  valueFrom:\n    secretKeyRef:\n      name: azure-voting-db-secrets\n      key: username\n- name: DATABASE_PASSWORD\n  valueFrom:\n    secretKeyRef:\n      name: azure-voting-db-secrets\n      key: password\n"})}),"\n",(0,a.jsxs)(n.p,{children:["Your ",(0,a.jsx)(n.code,{children:"azure-voting-app-deployment.yaml"})," file should now look like this:"]}),"\n",(0,a.jsxs)(t,{children:[(0,a.jsx)("summary",{children:"Click to expand output"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  creationTimestamp: null\n  labels:\n    app: azure-voting-app\n  name: azure-voting-app\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: azure-voting-app\n  strategy: {}\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: azure-voting-app\n    spec:\n      containers:\n        - image: <REPLACE_THIS_WITH_YOUR_ACR_NAME>.azurecr.io/azure-voting-app:latest\n          name: azure-voting-app\n          ports:\n            - containerPort: 8080\n          resources: {}\n          env:\n            - name: FIRST_VALUE\n              value: "Dogs"\n            - name: SECOND_VALUE\n              value: "Cats"\n            - name: DATABASE_SERVER\n              value: "azure-voting-db"\n            - name: DATABASE_USER\n              valueFrom:\n                secretKeyRef:\n                  name: azure-voting-db-secrets\n                  key: username\n            - name: DATABASE_PASSWORD\n              valueFrom:\n                secretKeyRef:\n                  name: azure-voting-db-secrets\n                  key: password\nstatus: {}\n'})})]}),"\n",(0,a.jsx)(n.p,{children:"Let's move on to configure the PostgreSQL database deployment. The process of creating the YAML will be very similar to what we did for the Azure Voting App deployment."}),"\n",(0,a.jsx)("div",{class:"task","data-title":"Task",children:(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:["Using ",(0,a.jsx)(n.code,{children:"kubectl"}),", create a file called ",(0,a.jsx)(n.code,{children:"azure-voting-db-deployment.yaml"}),"."]}),"\n"]})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-base",children:"kubectl create deployment azure-voting-db \\\n  --image=postgres \\\n  --dry-run=client \\\n  -o yaml > azure-voting-db-deployment.yaml\n"})}),"\n",(0,a.jsx)("div",{class:"task","data-title":"Task",children:(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:["Open the ",(0,a.jsx)(n.code,{children:"azure-voting-db-deployment.yaml"})," file and add the following YAML to it (just below the ",(0,a.jsx)(n.code,{children:"resources"})," property)."]}),"\n"]})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"env:\n  - name: POSTGRES_USER\n    valueFrom:\n      secretKeyRef:\n        name: azure-voting-db-secrets\n        key: username\n  - name: POSTGRES_PASSWORD\n    valueFrom:\n      secretKeyRef:\n        name: azure-voting-db-secrets\n        key: password\n"})}),"\n",(0,a.jsxs)(n.p,{children:["Your ",(0,a.jsx)(n.code,{children:"azure-voting-db-deployment.yaml"})," file should now look like this:"]}),"\n",(0,a.jsxs)(t,{children:[(0,a.jsx)("summary",{children:"Click to expand output"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  creationTimestamp: null\n  labels:\n    app: azure-voting-db\n  name: azure-voting-db\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: azure-voting-db\n  strategy: {}\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: azure-voting-db\n    spec:\n      containers:\n        - image: postgres\n          name: postgres\n          resources: {}\n          env:\n            - name: POSTGRES_USER\n              valueFrom:\n                secretKeyRef:\n                  name: azure-voting-db-secrets\n                  key: username\n            - name: POSTGRES_PASSWORD\n              valueFrom:\n                secretKeyRef:\n                  name: azure-voting-db-secrets\n                  key: password\nstatus: {}\n"})})]}),"\n",(0,a.jsx)("div",{class:"task","data-title":"Task",children:(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsx)(n.p,{children:"Run the following command to create the PostgreSQL database deployment."}),"\n"]})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"kubectl apply -f azure-voting-db-deployment.yaml\n"})}),"\n",(0,a.jsx)(n.h2,{id:"exposing-deployments-with-services",children:"Exposing Deployments with Services"}),"\n",(0,a.jsx)(n.p,{children:"The front end pod will need to be able to connect to the database pod. We could use the database pod's IP address to connect, but that will not be resilient since there is no gurantee the database pod will have the same IP address when it is recreated due to maintenance or failure. Remember, pods are ephemeral and are given random IP addresses as they are created."}),"\n",(0,a.jsxs)(n.p,{children:["So we'll need to create a ",(0,a.jsx)(n.a,{href:"https://kubernetes.io/docs/concepts/services-networking/service/",children:"Service"})," for the database pod. Think of a service like an internal load balancer. This will give the front end app a single point of entry to connect to the database."]}),"\n",(0,a.jsxs)(n.p,{children:["We can use the same technique of creating a YAML manifest for the service using ",(0,a.jsx)(n.code,{children:"kubectl"}),"."]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"kubectl"})," allows you to imperatively create a service using the ",(0,a.jsx)(n.code,{children:"kubectl expose"})," command."]}),"\n",(0,a.jsx)("div",{class:"task","data-title":"Task",children:(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsx)(n.p,{children:"Run the following command to create a service YAML manifest for the PostgreSQL database deployment."}),"\n"]})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"kubectl expose deployment azure-voting-db \\\n  --port=5432 \\\n  --target-port=5432 \\\n  --name=azure-voting-db \\\n  --dry-run=client \\\n  -o yaml > azure-voting-db-service.yaml\n"})}),"\n",(0,a.jsx)("div",{class:"task","data-title":"Task",children:(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsx)(n.p,{children:"Run the following command to apply the service YAML manifest for the PostgreSQL database deployment."}),"\n"]})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"kubectl apply -f azure-voting-db-service.yaml\n"})}),"\n",(0,a.jsx)("div",{class:"important","data-title":"Important",children:(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsx)(n.p,{children:'Before running the next step below, make sure your container image has completed building and pushing to ACR; otherwise, you will run into a "container image not found" error.'}),"\n"]})}),"\n",(0,a.jsx)("div",{class:"task","data-title":"Task",children:(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsx)(n.p,{children:"Run the following command to create a deployment for the Azure Voting App."}),"\n"]})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"kubectl apply -f azure-voting-app-deployment.yaml\n"})}),"\n",(0,a.jsx)("div",{class:"task","data-title":"Task",children:(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsx)(n.p,{children:"Run the following command to create a service YAML manifest for the Azure Voting App deployment."}),"\n"]})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"kubectl expose deployment azure-voting-app \\\n  --port=8080 \\\n  --target-port=8080 \\\n  --name=azure-voting-app \\\n  --dry-run=client \\\n  -o yaml > azure-voting-app-service.yaml\n"})}),"\n",(0,a.jsx)("div",{class:"task","data-title":"Task",children:(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsx)(n.p,{children:"Run the following command to apply the service YAML manifest for the Azure Voting App deployment."}),"\n"]})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"kubectl apply -f azure-voting-app-service.yaml\n"})}),"\n",(0,a.jsx)(n.p,{children:"Now that we have deployed the Azure Voting App and the PostgreSQL database, we can check to see if they are running."}),"\n",(0,a.jsx)("div",{class:"task","data-title":"Task",children:(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsx)(n.p,{children:"Run the following command to get a list of deployments, pods, and services."}),"\n"]})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"kubectl get deployments,pods,services\n"})}),"\n",(0,a.jsxs)(t,{children:[(0,a.jsx)("summary",{children:"Click to expand output"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-text",children:"NAME                               READY   UP-TO-DATE   AVAILABLE   AGE\ndeployment.apps/azure-voting-app   1/1     1            1           27m\ndeployment.apps/azure-voting-db    1/1     1            1           27m\n\nNAME                                    READY   STATUS    RESTARTS   AGE\npod/azure-voting-app-6bc9446ddb-xvdgc   1/1     Running   0          10m\npod/azure-voting-db-5666f7fc58-nph78    1/1     Running   0          27m\n\nNAME                       TYPE        CLUSTER-IP   EXTERNAL-IP   PORT(S)    AGE\nservice/azure-voting-app   ClusterIP   10.0.185.0   <none>        8080/TCP   22s\nservice/azure-voting-db    ClusterIP   10.0.13.23   <none>        5432/TCP   3m\nservice/kubernetes         ClusterIP   10.0.0.1     <none>        443/TCP    171m\n"})})]}),"\n",(0,a.jsxs)(n.p,{children:["The application and services are now running, but we can't access it yet. If you noticed, there is no way to access the application from outside the cluster. We can temporarily connect to the service by using the ",(0,a.jsx)(n.code,{children:"kubectl port-forward"})," command for now."]}),"\n",(0,a.jsx)("div",{class:"task","data-title":"Task",children:(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsx)(n.p,{children:"Run the following command to expose the application."}),"\n"]})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"kubectl port-forward service/azure-voting-app 8080:8080\n"})}),"\n",(0,a.jsx)("div",{class:"info","data-title":"Info",children:(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:["Kubernetes will now forward all traffic from port 8080 on your local machine to port 8080 on the ",(0,a.jsx)(n.code,{children:"azure-voting-app"})," service."]}),"\n"]})}),"\n",(0,a.jsxs)(n.p,{children:["Now that we have exposed the application, we can access it from our local machine. Open a browser and navigate to ",(0,a.jsx)(n.a,{href:"http://localhost:8080",children:"http://localhost:8080"}),"."]}),"\n",(0,a.jsx)(n.p,{children:"You should see the Azure Voting App."}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"Azure Voting App on AKS",src:s(9390).A+"",width:"1438",height:"1142"})}),"\n",(0,a.jsx)("div",{class:"task","data-title":"Task",children:(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:["Press ",(0,a.jsx)(n.code,{children:"Ctrl+C"})," to stop the port forwarding. We'll expose the application in a more permanent way later."]}),"\n"]})}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h2,{id:"dealing-with-secrets",children:"Dealing with secrets"}),"\n",(0,a.jsx)(n.p,{children:"The dirty secret about Kubernetes secrets is that they are not really secrets. They are just base64 encoded strings. Anyone with access to the cluster can decode them and see the actual value. This is not a problem if you are limiting access to your cluster."}),"\n",(0,a.jsx)(n.p,{children:"But remember, anyone with access to your cluster can see your secrets!"}),"\n",(0,a.jsx)("div",{class:"task","data-title":"Task",children:(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:["Run the following command to get the ",(0,a.jsx)(n.code,{children:"password"})," secret we saved in the cluster."]}),"\n"]})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"kubectl get secrets azure-voting-db-secrets -o jsonpath='{.data.password}'\n"})}),"\n",(0,a.jsxs)(n.p,{children:["We can decode the output by using the ",(0,a.jsx)(n.code,{children:"base64 --decode"})," command."]}),"\n",(0,a.jsx)("div",{class:"task","data-title":"Task",children:(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:["Run the following command to decode the ",(0,a.jsx)(n.code,{children:"password"})," secret."]}),"\n"]})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"kubectl get secrets azure-voting-db-secrets -o jsonpath='{.data.password}' | base64 --decode\n"})}),"\n",(0,a.jsx)(n.p,{children:"There it is.. the secret is out. Anyone with access to the cluster can see the secret \ud83d\ude28"}),"\n",(0,a.jsx)("div",{class:"task","data-title":"Task",children:(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:["Run the following command to delete the ",(0,a.jsx)(n.code,{children:"azure-voting-db-secrets"})," secret. We'll create a new one next."]}),"\n"]})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"kubectl delete secret azure-voting-db-secrets\n"})}),"\n",(0,a.jsx)(n.h3,{id:"securely-storing-secrets",children:"Securely storing secrets"}),"\n",(0,a.jsxs)(n.p,{children:["There are a few ways to store secrets in a more secure manner. One way is to use ",(0,a.jsx)(n.a,{href:"https://azure.microsoft.com/services/key-vault/",children:"Azure Key Vault"}),"."]}),"\n",(0,a.jsx)(n.p,{children:"Your lab environment already has an Azure Key Vault created for you."}),"\n",(0,a.jsx)("div",{class:"task","data-title":"Task",children:(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsx)(n.p,{children:"Run the following command to get the name of your Azure Key Vault."}),"\n"]})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'AKV_NAME=$(az resource list \\\n  --resource-group $RG_NAME \\\n  --resource-type Microsoft.KeyVault/vaults \\\n  --query "[0].name" -o tsv)\n'})}),"\n",(0,a.jsx)(n.p,{children:"With the name of your Azure Key Vault, you can now store your secrets in the Azure Key Vault."}),"\n",(0,a.jsx)("div",{class:"task","data-title":"Task",children:(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsx)(n.p,{children:"Run the following command to add the database username as a secret in the Azure Key Vault."}),"\n"]})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"az keyvault secret set \\\n  --vault-name $AKV_NAME \\\n  --name database-user \\\n  --value postgres\n"})}),"\n",(0,a.jsx)("div",{class:"task","data-title":"Task",children:(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsx)(n.p,{children:"Run the following command to add the database password as a secret in the Azure Key Vault."}),"\n"]})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"az keyvault secret set \\\n  --vault-name $AKV_NAME \\\n  --name database-password \\\n  --value postgres\n"})}),"\n",(0,a.jsx)(n.h3,{id:"using-the-azure-key-vault-secrets-in-kubernetes",children:"Using the Azure Key Vault secrets in Kubernetes"}),"\n",(0,a.jsxs)(n.p,{children:["You AKS cluster has also been provisioned with the ",(0,a.jsx)(n.a,{href:"https://secrets-store-csi-driver.sigs.k8s.io/",children:"Secret Store CSI driver"})," addon. This allows you to mount secrets from the Azure Key Vault as ",(0,a.jsx)(n.a,{href:"https://kubernetes.io/docs/concepts/storage/volumes/",children:"volumes"})," in your pods."]}),"\n",(0,a.jsx)("div",{class:"info","data-title":"Info",children:(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsx)(n.p,{children:"To verify that the Secret Store CSI driver addon is installed in your cluster, run the following command:"}),"\n"]})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"kubectl get pods \\\n  --namespace kube-system \\\n  --selector 'app in (secrets-store-csi-driver, secrets-store-provider-azure)'\n"})}),"\n",(0,a.jsxs)(t,{children:[(0,a.jsx)("summary",{children:"Click to expand output"}),(0,a.jsx)(n.p,{children:"You should see something like this:"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-text",children:"NAME                                     READY   STATUS    RESTARTS   AGE\naks-secrets-store-csi-driver-dnxf5       3/3     Running   0          3m35s\naks-secrets-store-csi-driver-nf5h8       3/3     Running   0          3m35s\naks-secrets-store-csi-driver-v4bql       3/3     Running   0          3m35s\naks-secrets-store-provider-azure-82nps   1/1     Running   0          3m35s\naks-secrets-store-provider-azure-s6lbd   1/1     Running   0          3m35s\naks-secrets-store-provider-azure-tcc7f   1/1     Running   0          3m35s\n"})})]}),"\n",(0,a.jsx)(n.h3,{id:"creating-a-serviceaccount",children:"Creating a ServiceAccount"}),"\n",(0,a.jsx)(n.p,{children:"In order to use the Secret Store CSI driver, we need to create a SecretProviderClass. This is a Kubernetes object that tells the Secret Store CSI driver which secrets to mount and where to mount them."}),"\n",(0,a.jsxs)(n.p,{children:["The authentication to the Azure Key Vault will be implemented using ",(0,a.jsx)(n.a,{href:"https://learn.microsoft.com/azure/aks/csi-secrets-store-identity-access#access-with-an-azure-ad-workload-identity-preview?WT.mc_id=containers-105184-pauyu",children:"workload identity"}),". This will allow the pod to use an Azure user-assigned managed identity to authenticate to the Azure Key Vault."]}),"\n",(0,a.jsxs)(n.p,{children:["To do this, we need to create a ",(0,a.jsx)(n.a,{href:"https://kubernetes.io/docs/concepts/security/service-accounts/",children:"ServiceAccount"}),", link it to the Azure managed identity, and attach it to the pod."]}),"\n",(0,a.jsx)("div",{class:"task","data-title":"Task",children:(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsx)(n.p,{children:"Run the following command to get the the client ID for the user-assigned managed identity."}),"\n"]})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"USER_ASSIGNED_CLIENT_ID=$(az identity show \\\n  --resource-group $RG_NAME \\\n  --name $AKS_NAME-identity \\\n  --query clientId -o tsv)\n"})}),"\n",(0,a.jsx)(n.p,{children:"Next, we need to create a ServiceAccount and annotate it with the Azure managed identity client ID."}),"\n",(0,a.jsx)("div",{class:"task","data-title":"Task",children:(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:["Set some variables we will use to create our ServiceAccount manifest. We need the namespace name that your app is deployed into and a service account name. We'll use the default namespace and ",(0,a.jsx)(n.code,{children:"azure-voting-app-serviceaccount"})," for the service account name."]}),"\n"]})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"SERVICE_ACCOUNT_NAMESPACE=default\nSERVICE_ACCOUNT_NAME=azure-voting-app-serviceaccount\n"})}),"\n",(0,a.jsx)("div",{class:"task","data-title":"Task",children:(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsx)(n.p,{children:"Now run the following command to create the ServiceAccount manifest using the values we've set above."}),"\n"]})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'cat <<EOF > azure-voting-app-serviceaccount.yaml\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  annotations:\n    azure.workload.identity/client-id: ${USER_ASSIGNED_CLIENT_ID}\n  labels:\n    azure.workload.identity/use: "true"\n  name: ${SERVICE_ACCOUNT_NAME}\n  namespace: ${SERVICE_ACCOUNT_NAMESPACE}\nEOF\n'})}),"\n",(0,a.jsx)("div",{class:"task","data-title":"Task",children:(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsx)(n.p,{children:"Run the following command to apply the ServiceAccount manifest."}),"\n"]})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"kubectl apply -f azure-voting-app-serviceaccount.yaml\n"})}),"\n",(0,a.jsx)(n.h3,{id:"creating-a-secretproviderclass",children:"Creating a SecretProviderClass"}),"\n",(0,a.jsxs)(n.p,{children:["Now, we need to create a SecretProviderClass which will tell the Secret Store CSI driver which secrets to mount and where to retrieve them from. Here we need the ",(0,a.jsx)(n.code,{children:"clientID"})," of the Azure managed identity, the name of the Azure Key Vault, and the tenant ID of the Azure Key Vault."]}),"\n",(0,a.jsxs)(n.p,{children:["We should have the ",(0,a.jsx)(n.code,{children:"clientID"})," and the Azure Key Vault name from steps above. To get the tenant ID, we can use the ",(0,a.jsx)(n.code,{children:"az identity show"})," command again."]}),"\n",(0,a.jsx)("div",{class:"task","data-title":"Task",children:(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:["Run the following commands to retrieve information the ",(0,a.jsx)(n.code,{children:"tenantId"}),"."]}),"\n"]})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"TENANT_ID=$(az identity show \\\n  --resource-group $RG_NAME \\\n  --name $AKS_NAME-identity \\\n  --query tenantId -o tsv)\n"})}),"\n",(0,a.jsx)("div",{class:"task","data-title":"Task",children:(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsx)(n.p,{children:"Run the following command to needed to create a YAML manifest for the SecretProviderClass."}),"\n"]})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'cat <<EOF > azure-voting-app-secretproviderclass.yaml\napiVersion: secrets-store.csi.x-k8s.io/v1\nkind: SecretProviderClass\nmetadata:\n  name: azure-keyvault-secrets                 # This needs to be unique per namespace\nspec:\n  provider: azure\n  parameters:\n    usePodIdentity: "false"\n    useVMManagedIdentity: "false"\n    clientID: "${USER_ASSIGNED_CLIENT_ID}"     # Setting this to use workload identity\n    keyvaultName: ${AKV_NAME}                  # Set to the name of your key vault\n    objects:  |\n      array:\n        - |\n          objectName: database-user            # The name of the secret in the key vault\n          objectType: secret                   # The type of the secret in the key vault\n        - |\n          objectName: database-password\n          objectType: secret\n    tenantId: "${TENANT_ID}"                   # The tenant ID of the key vault\nEOF\n'})}),"\n",(0,a.jsx)("div",{class:"info","data-title":"Info",children:(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:"objects"})," property in the manifest is an array of objects that tells the Secret Store CSI driver which secrets to pull out of the Azure Key Vault."]}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:"clientID"})," property tells the Secret Store CSI driver which managed identity to use to authenticate to the Azure Key Vault."]}),"\n"]})}),"\n",(0,a.jsx)("div",{class:"task","data-title":"Task",children:(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsx)(n.p,{children:"Run the following command to apply the SecretProviderClass manifest."}),"\n"]})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"kubectl apply -f azure-voting-app-secretproviderclass.yaml\n"})}),"\n",(0,a.jsx)(n.h3,{id:"updating-the-database-deployment",children:"Updating the database deployment"}),"\n",(0,a.jsx)(n.p,{children:"Finally, we need to update our database and app deployments to use the ServiceAccount and mount the secrets into each pod as files."}),"\n",(0,a.jsx)(n.p,{children:"Our application code is written to read secrets from files, so all we need to do is make these files available to the pod on a path that the application is expecting."}),"\n",(0,a.jsxs)(n.p,{children:["In this case, secret files are expected to be in the ",(0,a.jsx)(n.code,{children:"/mnt/secrets-store"})," directory."]}),"\n",(0,a.jsx)("div",{class:"task","data-title":"Task",children:(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:["Open the ",(0,a.jsx)(n.code,{children:"azure-voting-db-deployment.yaml"})," file and replace your entire ",(0,a.jsx)(n.code,{children:"env:"})," block with this."]}),"\n"]})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'env:\n  - name: POSTGRES_USER_FILE\n    value: "/mnt/secrets-store/database-user"\n  - name: POSTGRES_PASSWORD_FILE\n    value: "/mnt/secrets-store/database-password"\n'})}),"\n",(0,a.jsx)("div",{class:"task","data-title":"Task",children:(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:["Directly underneath the ",(0,a.jsx)(n.code,{children:"env:"})," block add this to mount the secrets into the container."]}),"\n"]})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'volumeMounts:\n  - name: azure-voting-db-secrets\n    mountPath: "/mnt/secrets-store"\n    readOnly: true\n'})}),"\n",(0,a.jsx)("div",{class:"task","data-title":"Task",children:(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:["Next add a new line after the ",(0,a.jsx)(n.code,{children:"volumeMounts:"})," block and add the code below to enable the pod to use the ServiceAccount and add a volume to mount the secrets into. Make sure both ",(0,a.jsx)(n.code,{children:"serviceAccountName:"})," and ",(0,a.jsx)(n.code,{children:"volumes:"})," are indented to the same level as ",(0,a.jsx)(n.code,{children:"containers:"}),"."]}),"\n"]})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"serviceAccountName: azure-voting-app-serviceaccount\nvolumes:\n  - name: azure-voting-db-secrets\n    csi:\n      driver: secrets-store.csi.k8s.io\n      readOnly: true\n      volumeAttributes:\n        secretProviderClass: azure-keyvault-secrets\n"})}),"\n",(0,a.jsxs)(n.p,{children:["Here, we are telling Kubernetes to use the ",(0,a.jsx)(n.code,{children:"azure-voting-app-serviceaccount"})," ServiceAccount and attach a volume to the pod using the ",(0,a.jsx)(n.code,{children:"azure-keyvault-secrets"})," SecretProviderClass."]}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:"azure-keyvault-secrets"})," SecretProviderClass will tell the Secret Store CSI driver to mount the secrets from the Azure Key Vault into the pod."]}),"\n",(0,a.jsxs)(n.p,{children:["Your final ",(0,a.jsx)(n.code,{children:"azure-voting-db-deployment.yaml"})," file should look like this."]}),"\n",(0,a.jsxs)(t,{children:[(0,a.jsx)("summary",{children:"Click to expand code"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  creationTimestamp: null\n  labels:\n    app: azure-voting-db\n  name: azure-voting-db\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: azure-voting-db\n  strategy: {}\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: azure-voting-db\n    spec:\n      containers:\n        - image: postgres\n          name: postgres\n          resources: {}\n          env:\n            - name: POSTGRES_USER_FILE\n              value: "/mnt/secrets-store/database-user"\n            - name: POSTGRES_PASSWORD_FILE\n              value: "/mnt/secrets-store/database-password"\n          volumeMounts:\n            - name: azure-voting-db-secrets\n              mountPath: "/mnt/secrets-store"\n              readOnly: true\n      serviceAccountName: azure-voting-app-serviceaccount\n      volumes:\n        - name: azure-voting-db-secrets\n          csi:\n            driver: secrets-store.csi.k8s.io\n            readOnly: true\n            volumeAttributes:\n              secretProviderClass: azure-keyvault-secrets\nstatus: {}\n'})})]}),"\n",(0,a.jsx)(n.h3,{id:"updating-the-app-deployment",children:"Updating the app deployment"}),"\n",(0,a.jsx)(n.p,{children:"Let's do the same for the app deployment."}),"\n",(0,a.jsx)("div",{class:"task","data-title":"Task",children:(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:["Open the ",(0,a.jsx)(n.code,{children:"azure-voting-app-deployment.yaml"})," file and do the same thing for the app deployment. Replace your entire ",(0,a.jsx)(n.code,{children:"env:"})," block with this."]}),"\n"]})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'env:\n  - name: FIRST_VALUE\n    value: "Dogs"\n  - name: SECOND_VALUE\n    value: "Cats"\n  - name: DATABASE_SERVER\n    value: "azure-voting-db"\n'})}),"\n",(0,a.jsx)("div",{class:"task","data-title":"Task",children:(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsx)(n.p,{children:"Add this to mount the secrets into the container."}),"\n"]})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'volumeMounts:\n  - name: azure-voting-db-secrets\n    mountPath: "/mnt/secrets-store"\n    readOnly: true\n'})}),"\n",(0,a.jsx)("div",{class:"task","data-title":"Task",children:(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsx)(n.p,{children:"Finally add this to enable the pod to use the service account and add a volume to mount the secrets into."}),"\n"]})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"serviceAccountName: azure-voting-app-serviceaccount\nvolumes:\n  - name: azure-voting-db-secrets\n    csi:\n      driver: secrets-store.csi.k8s.io\n      readOnly: true\n      volumeAttributes:\n        secretProviderClass: azure-keyvault-secrets\n"})}),"\n",(0,a.jsxs)(t,{children:[(0,a.jsx)("summary",{children:"Click to expand code"}),(0,a.jsx)(n.p,{children:"The updated YAML to look like the following:"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  creationTimestamp: null\n  labels:\n    app: azure-voting-app\n  name: azure-voting-app\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: azure-voting-app\n  strategy: {}\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: azure-voting-app\n    spec:\n      containers:\n        - image: <REPLACE_THIS_WITH_YOUR_ACR_NAME>.azurecr.io/azure-voting-app:latest\n          name: azure-voting-app\n          ports:\n            - containerPort: 8080\n          resources: {}\n          env:\n            - name: FIRST_VALUE\n              value: "Dogs"\n            - name: SECOND_VALUE\n              value: "Cats"\n            - name: DATABASE_SERVER\n              value: "azure-voting-db"\n          volumeMounts:\n            - name: azure-voting-db-secrets\n              mountPath: "/mnt/secrets-store"\n              readOnly: true\n      serviceAccountName: azure-voting-app-serviceaccount\n      volumes:\n        - name: azure-voting-db-secrets\n          csi:\n            driver: secrets-store.csi.k8s.io\n            readOnly: true\n            volumeAttributes:\n              secretProviderClass: azure-keyvault-secrets\nstatus: {}\n'})})]}),"\n",(0,a.jsx)(n.h3,{id:"deploying-the-updated-yaml-files",children:"Deploying the updated YAML files"}),"\n",(0,a.jsx)("div",{class:"task","data-title":"Task",children:(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsx)(n.p,{children:"Deploy the updated YAML files to your cluster."}),"\n"]})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"kubectl apply -f azure-voting-db-deployment.yaml\nkubectl apply -f azure-voting-app-deployment.yaml\n"})}),"\n",(0,a.jsx)("div",{class:"task","data-title":"Task",children:(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsx)(n.p,{children:"Check the status of the Deployments, Pods, and Services. You should see the following:"}),"\n"]})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"kubectl get deployments,pods,services\n"})}),"\n",(0,a.jsxs)(t,{children:[(0,a.jsx)("summary",{children:"Click to expand output"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-text",children:"NAME                               READY   UP-TO-DATE   AVAILABLE   AGE\ndeployment.apps/azure-voting-app   1/1     1            1           23m\ndeployment.apps/azure-voting-db    1/1     1            1           23m\n\nNAME                                    READY   STATUS    RESTARTS   AGE\npod/azure-voting-app-756dc858f8-b4rkx   2/2     Running   0          22m\npod/azure-voting-db-59f4d48797-djt4z    2/2     Running   0          23m\n\nNAME                       TYPE        CLUSTER-IP     EXTERNAL-IP   PORT(S)    AGE\nservice/azure-voting-app   ClusterIP   10.0.110.128   <none>        8080/TCP   10h\nservice/azure-voting-db    ClusterIP   10.0.58.27     <none>        5432/TCP   10h\nservice/kubernetes         ClusterIP   10.0.0.1       <none>        443/TCP    12h\n"})})]}),"\n",(0,a.jsx)("div",{class:"info","data-title":"Info",children:(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsx)(n.p,{children:"Now that secrets are pulled from Azure KeyVault using the Secrets Store CSI driver and mounted directly into the pods, the secrets end up as files in the pod which no one else can read. The base container image that we used to host the app does not have shell access; therefore, no one can interactively log into the container and read these secret files \ud83d\ude0e\ud83d\udd12"}),"\n"]})}),"\n",(0,a.jsx)("div",{class:"task","data-title":"Task",children:(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsx)(n.p,{children:"Run the following command to enable port forwarding to the app service again to see if the app is working."}),"\n"]})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"kubectl port-forward service/azure-voting-app 8080:8080\n"})}),"\n",(0,a.jsxs)(n.p,{children:["Open a browser and navigate to ",(0,a.jsx)(n.a,{href:"http://localhost:8080",children:"http://localhost:8080"}),". You should see the voting app is working again."]}),"\n",(0,a.jsxs)(n.p,{children:["After testing stop the app by pressing ",(0,a.jsx)(n.code,{children:"Ctrl+C"})," in the terminal."]}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h2,{id:"persisting-data",children:"Persisting data"}),"\n",(0,a.jsx)(n.p,{children:"Databases need to store data, but pods are ephemeral. If the database pod is deleted or restarted, the data will be lost."}),"\n",(0,a.jsx)(n.p,{children:"To illustrate the problem, let's see what happens when we restart the database and app pods."}),"\n",(0,a.jsx)("div",{class:"task","data-title":"Task",children:(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsx)(n.p,{children:"Run the following command to delete the database and app pods. Kubernetes will automatically restart them."}),"\n"]})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"kubectl delete pod --all\n"})}),"\n",(0,a.jsxs)(n.p,{children:["Wait for the pods to restart and then run the ",(0,a.jsx)(n.code,{children:"kubectl port-forward"})," command again, and refresh the browser. You should see that the votes have been reset to 0 \ud83d\ude2d"]}),"\n",(0,a.jsx)(n.h3,{id:"creating-a-pvc-for-pgdata",children:"Creating a PVC for PGDATA"}),"\n",(0,a.jsxs)(n.p,{children:["When a PostgreSQL container is created, its data (",(0,a.jsx)(n.code,{children:"PGDATA"}),") points to a local directory (e.g., ",(0,a.jsx)(n.code,{children:"/var/lib/postgresql/data"}),"). When the pod crashes or restarts, the container starts with a clean slate and the data is gone."]}),"\n",(0,a.jsxs)(n.p,{children:["This can be solved by leveraging persistent storage; more specifically, by taking advantage of the ",(0,a.jsx)(n.a,{href:"https://learn.microsoft.com/azure/aks/csi-storage-drivers?WT.mc_id=containers-105184-pauyu",children:"Azure CSI drivers and storage classes"})," that have been pre-deployed into your AKS cluster."]}),"\n",(0,a.jsx)("div",{class:"task","data-title":"Task",children:(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsx)(n.p,{children:"Run the following command to see the storage classes that are available in your cluster."}),"\n"]})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"kubectl get storageclasses\n"})}),"\n",(0,a.jsxs)(t,{children:[(0,a.jsx)("summary",{children:"Click to expand output"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-text",children:"NAME                    PROVISIONER          RECLAIMPOLICY   VOLUMEBINDINGMODE      ALLOWVOLUMEEXPANSION   AGE\nazurefile               file.csi.azure.com   Delete          Immediate              true                   5h22m\nazurefile-csi           file.csi.azure.com   Delete          Immediate              true                   5h22m\nazurefile-csi-premium   file.csi.azure.com   Delete          Immediate              true                   5h22m\nazurefile-premium       file.csi.azure.com   Delete          Immediate              true                   5h22m\ndefault (default)       disk.csi.azure.com   Delete          WaitForFirstConsumer   true                   5h22m\nmanaged                 disk.csi.azure.com   Delete          WaitForFirstConsumer   true                   5h22m\nmanaged-csi             disk.csi.azure.com   Delete          WaitForFirstConsumer   true                   5h22m\nmanaged-csi-premium     disk.csi.azure.com   Delete          WaitForFirstConsumer   true                   5h22m\nmanaged-premium         disk.csi.azure.com   Delete          WaitForFirstConsumer   true                   5h22m\n"})})]}),"\n",(0,a.jsxs)(n.p,{children:["Typically for persistent storage, you would create a ",(0,a.jsx)(n.a,{href:"https://kubernetes.io/docs/concepts/storage/persistent-volumes/",children:"Persistent Volume (PV)"})," and ",(0,a.jsx)(n.a,{href:"https://kubernetes.io/docs/concepts/storage/persistent-volumes/#persistentvolumeclaims",children:"Persistent Volume Claim (PVC)"})," to request storage. However, the Azure CSI drivers allow you to create a PVC and have the storage classes create the PV for you using Azure Storage."]}),"\n",(0,a.jsxs)(n.p,{children:["We'll create a PVC using the ",(0,a.jsx)(n.code,{children:"managed-csi"})," storage class. This will create a managed disk in Azure."]}),"\n",(0,a.jsx)("div",{class:"task","data-title":"Task",children:(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:["Create a new ",(0,a.jsx)(n.code,{children:"azure-voting-app-pvc.yaml"})," manifest."]}),"\n"]})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"cat <<EOF > azure-voting-app-pvc.yaml\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: pvc-azuredisk\nspec:\n  accessModes:\n    - ReadWriteOnce\n  resources:\n    requests:\n      storage: 10Gi\n  storageClassName: managed-csi\nEOF\n"})}),"\n",(0,a.jsx)("div",{class:"task","data-title":"Task",children:(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsx)(n.p,{children:"Apply the manifest to create the PVC."}),"\n"]})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"kubectl apply -f azure-voting-app-pvc.yaml\n"})}),"\n",(0,a.jsx)(n.h3,{id:"updating-the-database-manifest-to-be-a-statefulset-and-use-the-pvc",children:"Updating the database manifest to be a StatefulSet and use the PVC"}),"\n",(0,a.jsxs)(n.p,{children:["With the PVC created, we can now update the ",(0,a.jsx)(n.code,{children:"azure-voting-db-deployment.yaml"})," manifest to use it."]}),"\n",(0,a.jsx)("div",{class:"info","data-title":"Info",children:(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:["Now that we are using a PVC, we should update our database manifest to use a ",(0,a.jsx)(n.a,{href:"https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/",children:"StatefulSet"})," instead of a Deployment. This will ensure that the PVC is not deleted when the pod is deleted."]}),"\n"]})}),"\n",(0,a.jsx)("div",{class:"task","data-title":"Task",children:(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:["Open the ",(0,a.jsx)(n.code,{children:"azure-voting-db-deployment.yaml"})," manifest and change ",(0,a.jsx)(n.code,{children:"kind: Deployment"})," to ",(0,a.jsx)(n.code,{children:"kind: StatefulSet"}),"."]}),"\n",(0,a.jsxs)(n.p,{children:["Also, since we are using a StatefulSet, we need to remove the ",(0,a.jsx)(n.code,{children:" strategy: {}"})," section from the manifest."]}),"\n",(0,a.jsxs)(n.p,{children:["Next, add an additional volume to the pod. You should already have a ",(0,a.jsx)(n.code,{children:"volumes"})," section in the YAML, add the following YAML to the end of the ",(0,a.jsx)(n.code,{children:"volumes"})," section."]}),"\n"]})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"- name: azure-voting-db-data\n  persistentVolumeClaim:\n    claimName: pvc-azuredisk\n"})}),"\n",(0,a.jsxs)("div",{class:"task","data-title":"Task",children:[(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:["Also in the ",(0,a.jsx)(n.code,{children:"azure-voting-db-deployment.yaml"})," manifest, add a volume mount to the container definition. You should already have a ",(0,a.jsx)(n.code,{children:"volumeMounts"})," section in the YAML. Add the following YAML to the end of the ",(0,a.jsx)(n.code,{children:"volumeMounts"})," section."]}),"\n"]}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'- name: azure-voting-db-data\n  mountPath: "/var/lib/postgresql/data"\n  subPath: "data"\n'})})]}),"\n",(0,a.jsx)("div",{class:"info","data-title":"Info",children:(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:"subPath"})," property allows us to mount a subdirectory of the volume into the container."]}),"\n"]})}),"\n",(0,a.jsxs)(n.p,{children:["Your ",(0,a.jsx)(n.code,{children:"azure-voting-db-deployment.yaml"})," file should now look like this:"]}),"\n",(0,a.jsxs)(t,{children:[(0,a.jsx)("summary",{children:"Click to expand code"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'apiVersion: apps/v1\nkind: StatefulSet\nmetadata:\n  creationTimestamp: null\n  labels:\n    app: azure-voting-db\n  name: azure-voting-db\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: azure-voting-db\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: azure-voting-db\n    spec:\n      containers:\n        - image: postgres\n          name: postgres\n          resources: {}\n          env:\n            - name: POSTGRES_USER_FILE\n              value: "/mnt/secrets-store/database-user"\n            - name: POSTGRES_PASSWORD_FILE\n              value: "/mnt/secrets-store/database-password"\n          volumeMounts:\n            - name: azure-voting-db-secrets\n              mountPath: "/mnt/secrets-store"\n              readOnly: true\n            - name: azure-voting-db-data\n              mountPath: "/var/lib/postgresql/data"\n              subPath: "data"\n      serviceAccountName: azure-voting-app-serviceaccount\n      volumes:\n        - name: azure-voting-db-secrets\n          csi:\n            driver: secrets-store.csi.k8s.io\n            readOnly: true\n            volumeAttributes:\n              secretProviderClass: azure-keyvault-secrets\n        - name: azure-voting-db-data\n          persistentVolumeClaim:\n            claimName: pvc-azuredisk\n\nstatus: {}\n'})})]}),"\n",(0,a.jsx)("div",{class:"task","data-title":"Task",children:(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsx)(n.p,{children:"Run the following command to delete the original db deployment and deploy a new statefulset."}),"\n"]})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"kubectl delete deploy azure-voting-db\n"})}),"\n",(0,a.jsx)("div",{class:"task","data-title":"Task",children:(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsx)(n.p,{children:"Now run the following command to apply the updated manifest."}),"\n"]})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"kubectl apply -f azure-voting-db-deployment.yaml\n"})}),"\n",(0,a.jsx)("div",{class:"task","data-title":"Task",children:(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsx)(n.p,{children:"Run the following command to see the status of the PVC."}),"\n"]})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"kubectl get pvc\n"})}),"\n",(0,a.jsxs)(t,{children:[(0,a.jsx)("summary",{children:"Click to expand output"}),(0,a.jsxs)(n.p,{children:["You should see the following output with a ",(0,a.jsx)(n.code,{children:"STATUS"})," of ",(0,a.jsx)(n.code,{children:"Bound"}),". This means the PVC has been successfully created and is ready to be used by the pod."]}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"NAME            STATUS   VOLUME                                     CAPACITY   ACCESS MODES   STORAGECLASS          AGE\npvc-azuredisk   Bound    pvc-e25b6853-21c9-493c-8d19-f4bae2e29be8   10Gi       RWO            managed-csi           2m9s\n"})})]}),"\n",(0,a.jsx)("div",{class:"task","data-title":"Task",children:(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsx)(n.p,{children:"Run the following command to check the status of the database pod."}),"\n"]})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"kubectl get pod -l app=azure-voting-db\n"})}),"\n",(0,a.jsx)("div",{class:"task","data-title":"Task",children:(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:["When the database pod is running, use the ",(0,a.jsx)(n.code,{children:"kubectl port-forward"})," command to access the app again."]}),"\n",(0,a.jsx)(n.p,{children:"Refresh the browser, add some votes, then delete the pods as we did at the beginning of this section."}),"\n"]})}),"\n",(0,a.jsx)(n.p,{children:"When you refresh the browser, you should see that the vote data has persisted even though the pods were deleted \ud83d\ude0e"}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h2,{id:"sharing-your-app",children:"Sharing your app"}),"\n",(0,a.jsx)(n.p,{children:"Up until now, we've been accessing our app using port forwarding. This is great for testing, but not very useful if you want users to use your app."}),"\n",(0,a.jsxs)(n.p,{children:["To expose your app to users, we can leverage the newly announced ",(0,a.jsx)(n.a,{href:"https://learn.microsoft.com/azure/aks/istio-deploy-addon?WT.mc_id=containers-105184-pauyu",children:"Istio service mesh add-on for AKS"}),". Istio is a service mesh that provides a lot of useful features, including ",(0,a.jsx)(n.a,{href:"https://istio.io/latest/docs/concepts/",children:"security, observability, traffic management, and more"}),". We won't be using all the features of Istio, We will however, leverage the ",(0,a.jsx)(n.a,{href:"https://istio.io/latest/docs/tasks/traffic-management/ingress/ingress-control/",children:"Ingress Gateway"})," to expose our app outside of the cluster."]}),"\n",(0,a.jsx)(n.h3,{id:"setting-up-istio",children:"Setting up Istio"}),"\n",(0,a.jsx)(n.p,{children:"The Istio add-on has already been installed in your AKS cluster with an external ingress gateway enabled."}),"\n",(0,a.jsx)("div",{class:"task","data-title":"Task",children:(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsx)(n.p,{children:"If you run the following command, you should see the Ingress Gateway service has been provisioned using a Load Balancer and it has an external IP address."}),"\n"]})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"kubectl get service -n aks-istio-ingress\n"})}),"\n",(0,a.jsxs)(t,{children:[(0,a.jsx)("summary",{children:"Click to expand output"}),(0,a.jsxs)(n.p,{children:["Note the ",(0,a.jsx)(n.code,{children:"NAME"})," and ",(0,a.jsx)(n.code,{children:"EXTERNAL-IP"})," of the service. The ",(0,a.jsx)(n.code,{children:"NAME"})," will be used when we create our Istio resources to expose our app and the ",(0,a.jsx)(n.code,{children:"EXTERNAL-IP"})," address will be used to access our app."]}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-text",children:"NAME                                TYPE           CLUSTER-IP     EXTERNAL-IP     PORT(S)                                      AGE\naks-istio-ingressgateway-external   LoadBalancer   10.0.182.197   20.252.61.166   15021:30831/TCP,80:30738/TCP,443:31546/TCP   40m\n"})})]}),"\n",(0,a.jsx)(n.p,{children:"Istio works by injecting a sidecar container into each pod. This sidecar container is responsible for handling all the traffic to and from containers in the pod. This sidecar can be manually injected in your deployments or you can tell Istio to automatically inject Istio sidecars."}),"\n",(0,a.jsx)("div",{class:"task","data-title":"Task",children:(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:["Label the ",(0,a.jsx)(n.code,{children:"default"})," namespace so that Istio will automatically inject the sidecar into our pods."]}),"\n"]})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"kubectl label namespace default istio.io/rev=asm-1-17\n"})}),"\n",(0,a.jsx)(n.p,{children:"Our deployments do not have a sidecar container. Let's redeploy our manifests to trigger Istio to inject sidecar containers into our pods."}),"\n",(0,a.jsx)("div",{class:"task","data-title":"Task",children:(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsx)(n.p,{children:"Run the following commands to delete the app."}),"\n"]})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"kubectl delete -f azure-voting-db-deployment.yaml\nkubectl delete -f azure-voting-app-deployment.yaml\n"})}),"\n",(0,a.jsx)("div",{class:"task","data-title":"Task",children:(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsx)(n.p,{children:"Now we can run the following commands to re-deploy the app."}),"\n"]})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"kubectl apply -f azure-voting-db-deployment.yaml\nkubectl apply -f azure-voting-app-deployment.yaml\n"})}),"\n",(0,a.jsx)("div",{class:"info","data-title":"Info",children:(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsx)(n.p,{children:"With our namespace labeled, Istio will automatically inject the sidecar container into our pods."}),"\n"]})}),"\n",(0,a.jsx)("div",{class:"task","data-title":"Task",children:(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsx)(n.p,{children:"Run the following command to see the status of the pods. You should now see each pod is running two containers, the app container and the Istio sidecar container."}),"\n"]})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"kubectl get pods\n"})}),"\n",(0,a.jsxs)(t,{children:[(0,a.jsx)("summary",{children:"Click to expand output"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-text",children:"NAME                                READY   STATUS    RESTARTS   AGE\nazure-voting-app-777cbb5494-8tnc7   2/2     Running   0          44s\nazure-voting-db-0                   2/2     Running   0          46s\nazure-voting-db-765c8d56c4-snq96    1/1     Running   0          4m10s\n"})})]}),"\n",(0,a.jsx)(n.h3,{id:"exposing-the-app-using-the-istio-ingress-gateway",children:"Exposing the app using the Istio Ingress Gateway"}),"\n",(0,a.jsxs)(n.p,{children:["Now that we have Istio installed and our app is running with the Istio sidecar, we can expose our app to the world using the Ingress Gateway. To do this, we need to implement two custom resources that got installed in the AKS cluster when Istio was installed. We will use the ",(0,a.jsx)(n.a,{href:"https://istio.io/latest/docs/reference/config/networking/gateway/",children:"Gateway"})," and ",(0,a.jsx)(n.a,{href:"https://istio.io/latest/docs/reference/config/networking/virtual-service/",children:"Virtual Service"})," resources to route traffic to our app."]}),"\n",(0,a.jsx)("div",{class:"task","data-title":"Task",children:(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsx)(n.p,{children:"Run the following commands to create the Istio Ingress Gateway resource."}),"\n"]})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'cat <<EOF > azure-voting-app-servicemesh.yaml\napiVersion: networking.istio.io/v1alpha3\nkind: Gateway\nmetadata:\n  name: azure-voting-app-gateway\nspec:\n  selector:\n    istio: aks-istio-ingressgateway-external\n  servers:\n    - port:\n        number: 80\n        name: http\n        protocol: HTTP\n      hosts:\n        - "*"\n---\napiVersion: networking.istio.io/v1alpha3\nkind: VirtualService\nmetadata:\n  name: azure-voting-app-virtualservice\nspec:\n  hosts:\n    - "*"\n  gateways:\n    - azure-voting-app-gateway\n  http:\n    - route:\n        - destination:\n            host: azure-voting-app\n            port:\n              number: 8080\nEOF\n'})}),"\n",(0,a.jsxs)(n.p,{children:["Here, we are creating a ",(0,a.jsx)(n.code,{children:"Gateway"})," resource that will route traffic to our app using the ",(0,a.jsx)(n.code,{children:"aks-istio-ingressgateway-external"})," service. This service was automatically created for you when the Istio Ingress Gateway was deployed. The gateway will listen on port 80 and route traffic to any host."]}),"\n",(0,a.jsxs)(n.p,{children:["The manifest above also creates a ",(0,a.jsx)(n.code,{children:"VirtualService"})," resource that will route traffic to our backend ",(0,a.jsx)(n.code,{children:"Service"})," resource via the Gateway."]}),"\n",(0,a.jsx)("div",{class:"task","data-title":"Task",children:(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsx)(n.p,{children:"Run the following command to apply the Istio Ingress Gateway resource."}),"\n"]})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"kubectl apply -f azure-voting-app-servicemesh.yaml\n"})}),"\n",(0,a.jsx)("div",{class:"task","data-title":"Task",children:(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsx)(n.p,{children:"Run the following command to get the IP address of the Istio Ingress Gateway."}),"\n"]})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"INGRESS_IP=$(kubectl get svc -n aks-istio-ingress aks-istio-ingressgateway-external -o jsonpath='{.status.loadBalancer.ingress[0].ip}')\n"})}),"\n",(0,a.jsx)("div",{class:"task","data-title":"Task",children:(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsx)(n.p,{children:"You can run the following command to get the URL of your app."}),"\n"]})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'echo "http://$INGRESS_IP/"\n'})}),"\n",(0,a.jsx)(n.p,{children:"Our app is now accessible to the world! \ud83c\udf10"}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h2,{id:"observing-your-app",children:"Observing your app"}),"\n",(0,a.jsxs)(n.p,{children:["Now that the app is fully deployed, we need a way to observe what's happening within the cluster. In AKS, we can use ",(0,a.jsx)(n.a,{href:"https://learn.microsoft.com/azure/azure-monitor/containers/container-insights-overview?WT.mc_id=containers-105184-pauyu",children:"Azure Container Insights"})," to get insights into our cluster. Additionally, we can leverage ",(0,a.jsx)(n.a,{href:"https://learn.microsoft.com/azure/azure-monitor/essentials/prometheus-metrics-overview?WT.mc_id=containers-105184-pauyu",children:"Azure Monitor managed service for Prometheus"})," and ",(0,a.jsx)(n.a,{href:"https://learn.microsoft.com/azure/managed-grafana/overview?WT.mc_id=containers-105184-pauyu",children:"Azure Managed Grafana"})," to get insights into our cluster using tooling that is very popular in the Cloud Native ecosystem."]}),"\n",(0,a.jsx)(n.p,{children:"We'll explore both options."}),"\n",(0,a.jsx)(n.h3,{id:"azure-container-insights",children:"Azure Container Insights"}),"\n",(0,a.jsx)(n.p,{children:"Your AKS cluster has been provisioned with Azure Container Insights enabled. This means that you can view metrics and logs for your cluster and the applications running in it."}),"\n",(0,a.jsx)("div",{class:"task","data-title":"Task",children:(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:["Open the Azure portal and navigate to your AKS cluster. Click on the ",(0,a.jsx)(n.strong,{children:"Insights"})," tab and explore the metrics and logs available."]}),"\n"]})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"Azure Container Insights",src:s(3173).A+"",width:"1971",height:"1720"})}),"\n",(0,a.jsx)(n.p,{children:"As you click through the different metrics and logs, you'll notice that you can view metrics and logs for the cluster as a whole, as well as for individual pods. This is very useful for troubleshooting issues."}),"\n",(0,a.jsx)(n.h3,{id:"prometheus-and-grafana",children:"Prometheus and Grafana"}),"\n",(0,a.jsx)(n.p,{children:"Azure Container Insights provides a lot of useful information, but it doesn't provide everything. For example, it doesn't provide information about the traffic flowing through Istio sidecar proxies. To get this information, we'll need to use Prometheus and Grafana. In the Insights tab, you'll notice that there is a link to enable Prometheus. Let's enable it."}),"\n",(0,a.jsx)("div",{class:"task","data-title":"Task",children:(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:["In the Azure portal, navigate to your AKS cluster. Click on the ",(0,a.jsx)(n.strong,{children:"Insights"})," tab and click the ",(0,a.jsx)(n.strong,{children:"Enable"})," button next to ",(0,a.jsx)(n.strong,{children:"Prometheus"}),". Check the checkboxes next to ",(0,a.jsx)(n.strong,{children:"Enable Prometheus metrics"})," and ",(0,a.jsx)(n.strong,{children:"Enable Grafana"})," and click ",(0,a.jsx)(n.strong,{children:"Configure"}),"."]}),"\n"]})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"Monitor settings",src:s(8632).A+"",width:"1971",height:"1720"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"Prometheus and Grafana",src:s(2274).A+"",width:"1971",height:"1720"})}),"\n",(0,a.jsx)(n.p,{children:"It will take a few minutes for your cluster to be onboarded. Once it's onboarded, you'll see a link to Grafana."}),"\n",(0,a.jsx)("div",{class:"task","data-title":"Task",children:(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:["Click on the ",(0,a.jsx)(n.strong,{children:"View Grafana"})," button then click the ",(0,a.jsx)(n.strong,{children:"Browse dashboards"})," link to open Grafana."]}),"\n"]})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"Grafana",src:s(4872).A+"",width:"1971",height:"1720"})}),"\n",(0,a.jsx)(n.p,{children:"The Azure Managed Grafana instance is pre-configured with Azure Managed Prometheus as a data source and also includes a some dashboards. Let's take a look at some of the Kubernetes dashboards and import the Istio workload dashboard."}),"\n",(0,a.jsx)("div",{class:"task","data-title":"Task",children:(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:["In Grafana, click on the Dashboards button, then click Browse. In the list of dashboards, click on the Managed Prometheus folder to expand a list of dashboards. Click on the ",(0,a.jsx)(n.strong,{children:"Kubernetes / Compute Resources / Cluster"})," dashboard to open it."]}),"\n"]})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"Browse Kubernetes dashboards",src:s(843).A+"",width:"1971",height:"1720"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"Kubernetes dashboard",src:s(3892).A+"",width:"1971",height:"1720"})}),"\n",(0,a.jsxs)(n.p,{children:["You can also browse other dashboards that are available in the ",(0,a.jsx)(n.a,{href:"https://grafana.com/grafana/dashboards/",children:"Grafana marketplace"}),"."]}),"\n",(0,a.jsx)("div",{class:"tip","data-title":"Tip",children:(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:["Here is a list of all the Grafana dashboards that have been published by the Azure Monitor team: ",(0,a.jsx)(n.a,{href:"https://grafana.com/orgs/azuremonitorteam/dashboards",children:"https://grafana.com/orgs/azuremonitorteam/dashboards"})]}),"\n"]})}),"\n",(0,a.jsx)(n.p,{children:"These should be enough to get you started. Feel free to explore the other dashboards and create your own."}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h2,{id:"scaling-your-app",children:"Scaling your app"}),"\n",(0,a.jsx)(n.p,{children:"As your app becomes more popular, you'll need to scale it to handle the increased load. In AKS, you can scale your app by increasing the number of replicas in your deployment. The Kubernetes Horizontal Pod Autoscaler (HPA) will automatically scale your app based on CPU and/or memory utilization. But not all workloads rely on these metrics for scaling. If say, you need to scale your workload based on the number of items in a queue, HPA will not be sufficient."}),"\n",(0,a.jsxs)(n.p,{children:["This is where we take a different approach and deploy KEDA to scale our app. ",(0,a.jsx)(n.a,{href:"https://keda.sh/",children:"KEDA is a Kubernetes-based Event Driven Autoscaler"}),". It allows you to scale your app on basically any metric. If there is a metric that KEDA can can access to, it can scale based on it. Under the covers KEDA, looks at the metrics and your scaling rules and eventually creates a HPA to do the actual scaling."]}),"\n",(0,a.jsx)(n.p,{children:"The AKS add-on for KEDA has already been installed in your cluster."}),"\n",(0,a.jsx)(n.h3,{id:"setting-request-and-limits",children:"Setting request and limits"}),"\n",(0,a.jsxs)(n.p,{children:["When scaling on a performance metric, we need to let Kubernetes know how much compute and memory resources to allocate for each pod. We do this by setting the ",(0,a.jsx)(n.code,{children:"requests"})," and ",(0,a.jsx)(n.code,{children:"limits"})," in our deployment. The ",(0,a.jsx)(n.code,{children:"requests"})," are the minimum amount of resources that Kubernetes will allocate for each pod. The ",(0,a.jsx)(n.code,{children:"limits"})," are the maximum amount of resources that Kubernetes will allocate for each pod. Kubernetes will use these values to determine how many pods to run based on the amount of resources available on the nodes in the cluster."]}),"\n",(0,a.jsx)("div",{class:"task","data-title":"Task",children:(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:["Open the ",(0,a.jsx)(n.code,{children:"azure-voting-app-deployment.yaml"})," file, find the empty ",(0,a.jsx)(n.code,{children:"resources: {}"})," block and replace it with the following."]}),"\n"]})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"resources:\n  requests:\n    cpu: 4m\n    memory: 55Mi\n  limits:\n    cpu: 6m\n    memory: 75Mi\n"})}),"\n",(0,a.jsx)("div",{class:"info","data-title":"Info",children:(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsx)(n.p,{children:"Setting resource requests and limits is a best practice and should be done for all your deployments."}),"\n"]})}),"\n",(0,a.jsxs)(n.p,{children:["Your ",(0,a.jsx)(n.code,{children:"azure-voting-app-deployment.yaml"})," file should now look like this:"]}),"\n",(0,a.jsxs)(t,{children:[(0,a.jsx)("summary",{children:"Click to expand code"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'apiVersion: apps/v1\nkind: StatefulSet\nmetadata:\n  creationTimestamp: null\n  labels:\n    app: azure-voting-db\n  name: azure-voting-db\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: azure-voting-db\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: azure-voting-db\n    spec:\n      containers:\n        - image: postgres\n          name: postgres\n          resources:\n            requests:\n              cpu: 4m\n              memory: 55Mi\n            limits:\n              cpu: 6m\n              memory: 75Mi\n          env:\n            - name: POSTGRES_USER_FILE\n              value: "/mnt/secrets-store/database-user"\n            - name: POSTGRES_PASSWORD_FILE\n              value: "/mnt/secrets-store/database-password"\n          volumeMounts:\n            - name: azure-voting-db-secrets\n              mountPath: "/mnt/secrets-store"\n              readOnly: true\n            - name: azure-voting-db-data\n              mountPath: "/var/lib/postgresql/data"\n              subPath: "data"\n      serviceAccountName: azure-voting-app-serviceaccount\n      volumes:\n        - name: azure-voting-db-secrets\n          csi:\n            driver: secrets-store.csi.k8s.io\n            readOnly: true\n            volumeAttributes:\n              secretProviderClass: azure-keyvault-secrets\n        - name: azure-voting-db-data\n          persistentVolumeClaim:\n            claimName: pvc-azuredisk\n\nstatus: {}\n'})})]}),"\n",(0,a.jsx)("div",{class:"task","data-title":"Task",children:(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsx)(n.p,{children:"Run the following command to deploy the updated manifest."}),"\n"]})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"kubectl apply -f azure-voting-app-deployment.yaml\n"})}),"\n",(0,a.jsx)(n.h3,{id:"scaling-with-keda-based-on-cpu-utilization",children:"Scaling with KEDA based on CPU utilization"}),"\n",(0,a.jsx)("div",{class:"task","data-title":"Task",children:(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:["Create a new ",(0,a.jsx)(n.code,{children:"azure-voting-app-scaledobject.yaml"})," manifest for KEDA. Here we will scale the application up when the CPU utilization is greater than 50%."]}),"\n"]})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'cat <<EOF > azure-voting-app-scaledobject.yaml\napiVersion: keda.sh/v1alpha1\nkind: ScaledObject\nmetadata:\n  name: azure-voting-app-scaledobject\nspec:\n  scaleTargetRef:\n    name: azure-voting-app\n  triggers:\n    - type: cpu\n      metricType: Utilization\n      metadata:\n        value: "50"\nEOF\n'})}),"\n",(0,a.jsx)("div",{class:"info","data-title":"Info",children:(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsx)(n.p,{children:"The default values for minimum and maximum replica counts weren't included in our manifest above, but it will default to 0 and 100 respectively. In some cases, the minimum defaults to 1 so consult the documentation for the specific scaler you are using."}),"\n"]})}),"\n",(0,a.jsx)("div",{class:"task","data-title":"Task",children:(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsx)(n.p,{children:"Apply the manifest to create the ScaledObject."}),"\n"]})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"kubectl apply -f azure-voting-app-scaledobject.yaml\n"})}),"\n",(0,a.jsx)("div",{class:"task","data-title":"Task",children:(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsx)(n.p,{children:"Run the following command to ensure the ScaledObject was created."}),"\n"]})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"kubectl get scaledobject\n"})}),"\n",(0,a.jsxs)(t,{children:[(0,a.jsx)("summary",{children:"Sample output"}),(0,a.jsxs)(n.p,{children:["Wait until the ",(0,a.jsx)(n.code,{children:"READY"})," column shows ",(0,a.jsx)(n.code,{children:"True"})]}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-text",children:"NAME                            SCALETARGETKIND      SCALETARGETNAME    MIN   MAX   TRIGGERS   AUTHENTICATION   READY   ACTIVE   FALLBACK   AGE\nazure-voting-app-scaledobject   apps/v1.Deployment   azure-voting-app               cpu                         True    True     Unknown    16s\n"})})]}),"\n",(0,a.jsx)(n.h3,{id:"load-testing-your-app",children:"Load testing your app"}),"\n",(0,a.jsx)(n.p,{children:"Now that our app is enabled for autoscaling, let's generate some load on our app and watch KEDA scale our app."}),"\n",(0,a.jsxs)(n.p,{children:["We'll use the ",(0,a.jsx)(n.a,{href:"https://learn.microsoft.com/azure/load-testing/overview-what-is-azure-load-testing?WT.mc_id=containers-105184-pauyu",children:"Azure Load Testing"})," service to generate load on our app and watch KEDA scale our app."]}),"\n",(0,a.jsx)("div",{class:"task","data-title":"Task",children:(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsx)(n.p,{children:"In the Azure Portal, navigate to your shared resource group and click on your Azure Load Testing resource."}),"\n",(0,a.jsxs)(n.p,{children:["Click the ",(0,a.jsx)(n.strong,{children:"Quick test"})," button to create a new test. In the ",(0,a.jsx)(n.strong,{children:"Quick test"})," blade, enter your ingress IP as the URL."]}),"\n",(0,a.jsxs)(n.p,{children:["Set the number of virtual users to ",(0,a.jsx)(n.strong,{children:"250"}),", test duration to ",(0,a.jsx)(n.strong,{children:"240"})," seconds, and the ramp up time of ",(0,a.jsx)(n.strong,{children:"60"}),"."]}),"\n",(0,a.jsxs)(n.p,{children:["Click the ",(0,a.jsx)(n.strong,{children:"Run test"})," button to start the test."]}),"\n"]})}),"\n",(0,a.jsx)("div",{class:"info","data-title":"Information",children:(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsx)(n.p,{children:"If you are familiar with creating JMeter tests, you can also create a JMeter test file and upload it to Azure Load Testing."}),"\n"]})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"Azure Load Testing",src:s(7458).A+"",width:"1468",height:"1282"})}),"\n",(0,a.jsx)("div",{class:"task","data-title":"Task",children:(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsx)(n.p,{children:"As the test is running, run the following command to watch the deployment scale."}),"\n"]})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"kubectl get deployment azure-voting-app -w\n"})}),"\n",(0,a.jsx)("div",{class:"task","data-title":"Task",children:(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsx)(n.p,{children:"In a different terminal tab, you can also run the following command to watch the Horizontal Pod Autoscaler reporting metrics as well."}),"\n"]})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"kubectl get hpa -w\n"})}),"\n",(0,a.jsx)(n.p,{children:"After a few minutes, you should start to see the number of replicas increase as the load test runs."}),"\n",(0,a.jsx)(n.p,{children:"In addition to viewing your application metrics from the Azure Load Testing service, you can also view detailed metrics from your managed Grafana instance and/or Container Insights from the Azure Portal, so be sure to check that out as well."}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h2,{id:"summary",children:"Summary"}),"\n",(0,a.jsx)(n.p,{children:"Congratulations, on making it this far \ud83c\udf89"}),"\n",(0,a.jsx)(n.p,{children:"Hope you had a lot of fun but unfortunately, all good things must come to an end \ud83e\udd72"}),"\n",(0,a.jsx)(n.p,{children:"Before you go, let's do a quick recap."}),"\n",(0,a.jsx)(n.p,{children:"In this workshop, you learned how to:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Deploy an application to Kubernetes using imperative and declarative methods"}),"\n",(0,a.jsxs)(n.li,{children:["Leverage the power of ",(0,a.jsx)(n.code,{children:"kubectl"})," to generate YAML manifests for our app and deployed them to our AKS cluster"]}),"\n",(0,a.jsx)(n.li,{children:"Add an additional layer of security for our application secrets by storing them in Azure Key Vault and using the Secrets Store CSI driver to mount them into our pods"}),"\n",(0,a.jsx)(n.li,{children:"Effectively run stateful workloads on AKS using StorageClasses to create persistent storage for the database"}),"\n",(0,a.jsx)(n.li,{children:"Expose the frontend application to the internet using Istio's Ingress gateway"}),"\n",(0,a.jsx)(n.li,{children:"Scale the app using KEDA and load test the application to ensure it scales as expected"}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:["To learn more about Kubernetes, check out the ",(0,a.jsx)(n.a,{href:"https://azure.microsoft.com/resources/kubernetes-learning-path/",children:"Kubernetes Learning Path"})," and be sure to check out the ",(0,a.jsx)(n.a,{href:"https://docs.microsoft.com/azure/aks/",children:"AKS docs"}),". For additional workshop content, be sure to check out ",(0,a.jsx)(n.a,{href:"https://azure-samples.github.io/aks-labs/catalog/",children:"https://azure-samples.github.io/aks-labs/catalog/"})," and ",(0,a.jsx)(n.a,{href:"https://aka.ms/oss-labs/",children:"https://aka.ms/oss-labs/"})]}),"\n",(0,a.jsxs)(n.p,{children:["If you have any questions or feedback, please let me know in the comments below or reach out to me on Twitter ",(0,a.jsx)(n.a,{href:"https://twitter.com/pauldotyu",children:"@pauldotyu"})," or LinkedIn ",(0,a.jsx)(n.a,{href:"https://www.linkedin.com/in/yupaul/",children:"/in/yupaul"})]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},9390:(e,n,s)=>{s.d(n,{A:()=>t});const t=s.p+"assets/images/azure-voting-app-on-aks-b3d97b131609ba3c4ff1ef8b6fe61cd3.png"},2914:(e,n,s)=>{s.d(n,{A:()=>t});const t=s.p+"assets/images/azure-voting-app-ac384f4edf46a621ce16fd3494bc7963.png"},843:(e,n,s)=>{s.d(n,{A:()=>t});const t=s.p+"assets/images/browse-dashboards-b660155cd96e2a10045d154bd28e4616.png"},391:(e,n,s)=>{s.d(n,{A:()=>t});const t=s.p+"assets/images/clone-repo-44a87f58277c4891af5ad998d84ee580.png"},8632:(e,n,s)=>{s.d(n,{A:()=>t});const t=s.p+"assets/images/cluster-monitor-settings-1fbf4ba814fc61fafbaa7c254c58fcb0.png"},3173:(e,n,s)=>{s.d(n,{A:()=>t});const t=s.p+"assets/images/container-insights-984c1d7222024c2cfa13f121e4d0bb1d.png"},2274:(e,n,s)=>{s.d(n,{A:()=>t});const t=s.p+"assets/images/enable-prometheus-grafana-d1c4b55a1759ec7f407bb92d0808dcfd.png"},3892:(e,n,s)=>{s.d(n,{A:()=>t});const t=s.p+"assets/images/kubernetes-dashboard-285576f89c92a4b074a798ed516f88cd.png"},7458:(e,n,s)=>{s.d(n,{A:()=>t});const t=s.p+"assets/images/load-test-setup-d55199efd2a5556ac68aad61faca5a86.png"},4872:(e,n,s)=>{s.d(n,{A:()=>t});const t=s.p+"assets/images/open-grafana-f47d9a515eb0d8b2f5d7e675b0a2e13a.png"},8453:(e,n,s)=>{s.d(n,{R:()=>i,x:()=>o});var t=s(6540);const a={},r=t.createContext(a);function i(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);